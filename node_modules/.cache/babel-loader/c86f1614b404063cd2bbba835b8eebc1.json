{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/CRUD.Employee.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { DeleteOutlined, ExclamationCircleOutlined, FormOutlined, PlusOutlined, UserAddOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Input, InputNumber, Layout, message, Modal, Radio, Row, Select, Spin, Table, Typography, Upload } from \"antd\";\nimport { get } from \"lodash\";\nimport storage from \"../../../common/storage\";\nimport { USER_STATE } from '../../../common/constants';\nconst {\n  Content\n} = Layout;\nconst {\n  confirm\n} = Modal;\nconst {\n  Option\n} = Select;\nconst {\n  Text\n} = Typography;\nconst layout = {\n  labelCol: {\n    span: 7\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst beforeUpload = file => {\n  console.log('i am from before upload', file);\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 <= 2;\n\n  if (!isLt2M) {\n    message.error('Image must be smaller than or equal to 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n};\n\nconst getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nconst CRUDEmployee = ({\n  handleSubmit,\n  handleFetching,\n  employeeState,\n  loading,\n  Success,\n  handleDeletion,\n  deletion,\n  getSingleEmployee,\n  singleEmployeeState,\n  updateSingleEmployee,\n  onUpdate\n}) => {\n  const [visible, setVisible] = useState(false);\n  const [visibleUpdate, setVisibleUpdate] = useState(false);\n  const [visibleView, setVisibleView] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [search, setSearch] = useState({\n    words: ''\n  });\n  const [page, setPage] = useState({\n    current: 1\n  });\n  const [id, setId] = useState('');\n  const [imgPreview, setImgPreview] = useState('');\n  const [imgData, setImgData] = useState(null);\n  const typeOfId = get(storage.get('user'), 'user.typeOfId');\n  useEffect(() => {\n    handleFetching();\n  }, [handleFetching, Success, deletion, onUpdate]);\n  useEffect(() => {\n    if (id) {\n      getSingleEmployee(id);\n    }\n  }, [getSingleEmployee, id]);\n  let data = !loading && employeeState ? employeeState.employee.map((row, index) => ({\n    Name: row.name.charAt(0).toUpperCase() + row.name.slice(1),\n    Gender: row.gender.charAt(0).toUpperCase() + row.gender.slice(1),\n    joinDate: React.createElement(Moment, {\n      format: \"YYYY-MM-DD HH:mm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, row.joinDate),\n    Sr: index,\n    Id: row._id\n  })) : [];\n  data = data.filter(item => item.Name.toLowerCase().includes(search.words.toLowerCase()));\n  const empLength = !loading && employeeState ? employeeState.length : 0;\n  const [form] = Form.useForm();\n  const {\n    validateFields,\n    resetFields,\n    setFieldsValue,\n    scrollToField\n  } = form;\n  setTimeout(() => {\n    if (id && singleEmployeeState && singleEmployeeState.employee) {\n      setFieldsValue({\n        name: singleEmployeeState.employee.name,\n        email: singleEmployeeState.employee.email,\n        gender: singleEmployeeState.employee.gender,\n        age: singleEmployeeState.employee.age,\n        designation: singleEmployeeState.employee.designation,\n        department: singleEmployeeState.employee.department,\n        address: singleEmployeeState.employee.address\n      });\n    } else {\n      resetFields();\n    }\n  }, 50);\n\n  const showDeleteConfirm = id => {\n    confirm({\n      title: 'Are you sure delete this employee?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      content: 'After this operation employee will successfully deleted from database',\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n\n      onOk() {\n        handleDeletion(id);\n      }\n\n    });\n  };\n\n  const handleOkForRegistration = () => {\n    validateFields().then(values => {\n      resetFields();\n      onFinish(values);\n    }).then(() => {\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setConfirmLoading(false);\n      }, 1000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleCancelForRegistration = () => {\n    resetFields();\n    setImgData(null);\n    setVisible(false);\n  };\n\n  const onFinish = values => {\n    handleSubmit(values, imgData);\n  };\n\n  const updateEmployee = values => {\n    updateSingleEmployee(id, values);\n  };\n\n  const handleOkForUpdate = () => {\n    validateFields().then(values => {\n      resetFields();\n      updateEmployee(values);\n    }).then(() => {\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setId(undefined);\n        setConfirmLoading(false);\n      }, 1000);\n    }).catch(err => {\n      console.log(err);\n    });\n    setVisibleUpdate(false);\n  };\n\n  const handleCancelForUpdate = () => {\n    setVisibleUpdate(false);\n    setId(undefined);\n  };\n\n  if (id === undefined) {\n    setTimeout(() => {\n      resetFields();\n    }, 50);\n  }\n\n  const showModalForRegistration = () => {\n    setVisible(true);\n  };\n\n  const showModalForUpdate = () => {\n    setVisibleUpdate(true);\n  };\n\n  const onFinishFailed = ({\n    errorFields\n  }) => {\n    scrollToField(errorFields[0].name);\n  };\n\n  const showModalForViewEmployee = () => {\n    setVisibleView(true);\n  };\n\n  const handleCancelForViewEmployee = () => {\n    setVisibleView(false);\n    setId(undefined);\n  };\n\n  const columns = [{\n    title: \"Sr.\",\n    dataIndex: \"Sr\",\n    key: \"Sr\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"Name\",\n    key: \"Name\",\n    render: (text, record) => React.createElement(\"p\", {\n      onClick: () => {\n        showModalForViewEmployee();\n        setId(record.Id);\n      },\n      style: {\n        cursor: 'pointer',\n        color: 'blue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, text)\n  }, {\n    title: \"Gender\",\n    dataIndex: \"Gender\",\n    key: \"Gender\"\n  }, {\n    title: \"JoinDate\",\n    dataIndex: \"joinDate\",\n    key: \"JoinDate\"\n  }, {\n    title: \"Actions\",\n    key: \"Actions\",\n    render: record => React.createElement(\"span\", {\n      style: {\n        paddingLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(FormOutlined, {\n      style: {\n        color: 'green'\n      },\n      onClick: () => {\n        showModalForUpdate();\n        setId(record.Id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), typeOfId === USER_STATE.ADMIN_FULL ? React.createElement(DeleteOutlined, {\n      style: {\n        color: 'red',\n        paddingLeft: '15px'\n      },\n      onClick: () => showDeleteConfirm(record.Id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }) : null)\n  }];\n\n  const handleSearch = e => {\n    setSearch({\n      words: e.target.value\n    });\n    setPage({\n      current: 1\n    });\n  };\n\n  const onChange = page => {\n    setPage({\n      current: page\n    });\n  };\n\n  const showTotal = total => {\n    return `Total ${total} employees`;\n  };\n\n  const handleChange = (info, {\n    fileList\n  }) => {\n    setImgData(fileList[0].originFileObj);\n    console.log(info);\n  };\n\n  console.log('i am from onChange', imgData);\n  const uploadButton = React.createElement(\"div\", {\n    className: \"ant-upload-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(PlusOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }), \"Upload\");\n  return React.createElement(Content, {\n    style: {\n      margin: \"0 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"site-layout-background\",\n    style: {\n      padding: 24,\n      minHeight: 360,\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, typeOfId === USER_STATE.ADMIN_FULL ? React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModalForRegistration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(UserAddOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }), \"Add Employee\") : null, React.createElement(Modal, {\n    getContainer: false,\n    title: visible ? \"Employee Registration Form\" : 'Update Employee',\n    visible: visible ? visible : visibleUpdate,\n    onOk: visible ? handleOkForRegistration : handleOkForUpdate,\n    okText: visible ? \"Register\" : 'Update',\n    confirmLoading: confirmLoading,\n    onCancel: visible ? handleCancelForRegistration : handleCancelForUpdate,\n    maskClosable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(Upload, {\n    name: \"file\",\n    listType: \"picture-card\",\n    showUploadList: false,\n    beforeUpload: () => false,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, imgData ? React.createElement(\"img\", {\n    src: imgData,\n    alt: \"avatar\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }) : uploadButton), React.createElement(Form, Object.assign({}, layout, {\n    form: form,\n    name: \"nest-messages\",\n    onFinish: visible ? onFinish : updateEmployee,\n    onFinishFailed: onFinishFailed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: 'name',\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'email',\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"age\",\n    label: \"Age\",\n    rules: [{\n      type: 'number',\n      required: true,\n      min: 21,\n      max: 99\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    type: \"number\",\n    placeholder: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"gender\",\n    label: \"Gender\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Select a gender\",\n    allowClear: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, React.createElement(Option, {\n    value: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, \"male\"), React.createElement(Option, {\n    value: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, \"female\"), React.createElement(Option, {\n    value: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, \"other\"))), React.createElement(Form.Item, {\n    name: 'designation',\n    label: \"Designation\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your designation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'department',\n    label: \"Department\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your department\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'address',\n    label: \"Address\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    placeholder: \"Please add address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }))))), React.createElement(Modal, {\n    title: \"Viewing Employee\",\n    visible: visibleView,\n    maskClosable: false,\n    onCancel: handleCancelForViewEmployee,\n    footer: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, !singleEmployeeState ? React.createElement(Spin, {\n    tip: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.name), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, \"Age: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.age), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }, \"Gender: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.gender), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, \"Email: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.email), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, \"JoinDate: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.joinDate.split('T')[0]), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, \"Department: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.department), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }, \"Designation: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.designation), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }, \"Address: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.address)))), React.createElement(Col, {\n    span: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, React.createElement(Radio.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }, React.createElement(Radio.Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  }, \"button\"), React.createElement(Radio.Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, \"button\"), React.createElement(Radio.Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, \"button\"))), React.createElement(Col, {\n    span: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"filter by name\",\n    onChange: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471\n    },\n    __self: this\n  })))), loading ? React.createElement(Spin, {\n    size: \"large\",\n    tip: \"Loading...\",\n    style: {\n      paddingTop: 100,\n      width: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476\n    },\n    __self: this\n  }) : React.createElement(Table, {\n    rowKey: obj => obj.Id,\n    columns: columns,\n    dataSource: data,\n    pagination: {\n      current: page.current,\n      onChange: onChange,\n      total: {\n        empLength\n      },\n      showTotal: showTotal,\n      showQuickJumper: true,\n      showSizeChanger: true\n    },\n    scroll: {\n      y: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  })));\n};\n\nCRUDEmployee.defaultProps = {};\nCRUDEmployee.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleFetching: PropTypes.func.isRequired,\n  handleDeletion: PropTypes.func.isRequired,\n  getSingleEmployee: PropTypes.func.isRequired,\n  updateSingleEmployee: PropTypes.func.isRequired,\n  employeeState: PropTypes.any,\n  singleEmployeeState: PropTypes.any,\n  deletion: PropTypes.bool,\n  loading: PropTypes.bool,\n  Success: PropTypes.bool,\n  onUpdate: PropTypes.bool\n};\nCRUDEmployee.styles = {};\nexport default CRUDEmployee;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/CRUD.Employee.js"],"names":["React","useEffect","useState","PropTypes","Moment","DeleteOutlined","ExclamationCircleOutlined","FormOutlined","PlusOutlined","UserAddOutlined","Button","Col","Form","Input","InputNumber","Layout","message","Modal","Radio","Row","Select","Spin","Table","Typography","Upload","get","storage","USER_STATE","Content","confirm","Option","Text","layout","labelCol","span","wrapperCol","beforeUpload","file","console","log","isJpgOrPng","type","error","isLt2M","size","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","CRUDEmployee","handleSubmit","handleFetching","employeeState","loading","Success","handleDeletion","deletion","getSingleEmployee","singleEmployeeState","updateSingleEmployee","onUpdate","visible","setVisible","visibleUpdate","setVisibleUpdate","visibleView","setVisibleView","confirmLoading","setConfirmLoading","search","setSearch","words","page","setPage","current","id","setId","imgPreview","setImgPreview","imgData","setImgData","typeOfId","data","employee","map","row","index","Name","name","charAt","toUpperCase","slice","Gender","gender","joinDate","Sr","Id","_id","filter","item","toLowerCase","includes","empLength","length","form","useForm","validateFields","resetFields","setFieldsValue","scrollToField","setTimeout","email","age","designation","department","address","showDeleteConfirm","title","icon","content","okText","okType","cancelText","onOk","handleOkForRegistration","then","values","onFinish","catch","err","handleCancelForRegistration","updateEmployee","handleOkForUpdate","undefined","handleCancelForUpdate","showModalForRegistration","showModalForUpdate","onFinishFailed","errorFields","showModalForViewEmployee","handleCancelForViewEmployee","columns","dataIndex","key","render","text","record","cursor","color","paddingLeft","ADMIN_FULL","handleSearch","e","target","value","onChange","showTotal","total","handleChange","info","fileList","originFileObj","uploadButton","margin","padding","minHeight","width","required","min","max","split","paddingTop","obj","showQuickJumper","showSizeChanger","y","defaultProps","propTypes","func","isRequired","any","bool","styles"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment'\n\n\nimport {\n    DeleteOutlined,\n    ExclamationCircleOutlined,\n    FormOutlined,\n    PlusOutlined,\n    UserAddOutlined\n} from '@ant-design/icons';\nimport {\n    Button,\n    Col,\n    Form,\n    Input,\n    InputNumber,\n    Layout,\n    message,\n    Modal,\n    Radio,\n    Row,\n    Select,\n    Spin,\n    Table,\n    Typography,\n    Upload\n} from \"antd\";\nimport {get} from \"lodash\";\nimport storage from \"../../../common/storage\";\nimport {USER_STATE} from '../../../common/constants';\n\nconst { Content } = Layout;\nconst { confirm } = Modal;\nconst { Option } = Select;\nconst { Text } = Typography;\n\n\nconst layout = {\n    labelCol: {\n        span: 7,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst beforeUpload = (file) => {\n    console.log('i am from before upload', file)\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 <= 2;\n    if (!isLt2M) {\n        message.error('Image must be smaller than or equal to 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n}\n\nconst getBase64 = (img, callback) =>  {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nconst CRUDEmployee = ({\n                            handleSubmit,\n                            handleFetching,\n                            employeeState,\n                            loading,\n                            Success,\n                            handleDeletion,\n                            deletion,\n                            getSingleEmployee,\n                            singleEmployeeState,\n                            updateSingleEmployee,\n                            onUpdate,\n\n }) => {\n    const [visible, setVisible] = useState(false)\n    const [visibleUpdate, setVisibleUpdate] = useState(false)\n    const [visibleView, setVisibleView] = useState(false)\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [search, setSearch] = useState({ words: '' });\n    const [page, setPage] = useState({ current: 1 });\n    const [id, setId] = useState('')\n    const [imgPreview, setImgPreview] = useState('');\n    const [imgData, setImgData] = useState(null)\n\n    const typeOfId = get(storage.get('user'), 'user.typeOfId');\n\n    useEffect(() => {\n        handleFetching();\n    },[handleFetching, Success, deletion, onUpdate,])\n\n    useEffect(() => {\n        if (id) {\n            getSingleEmployee(id)\n        }\n    }, [getSingleEmployee, id,]);\n\n\n    let data = (!loading && employeeState ? employeeState.employee.map((row, index) => ({\n        Name: row.name.charAt(0).toUpperCase() + row.name.slice(1),\n        Gender: row.gender.charAt(0).toUpperCase() + row.gender.slice(1),\n        joinDate: <Moment format={\"YYYY-MM-DD HH:mm\"}>{row.joinDate}</Moment>,\n        Sr: index,\n        Id: row._id,\n    })): [] );\n\n     data = data.filter((item) =>\n        item.Name.toLowerCase().includes(search.words.toLowerCase())\n    );\n\n     const empLength = !loading && employeeState ? employeeState.length : 0;\n     const [form] = Form.useForm();\n     const { validateFields, resetFields, setFieldsValue, scrollToField } = form;\n\n    setTimeout(() => {\n        if (id && singleEmployeeState && singleEmployeeState.employee ) {\n            setFieldsValue({\n                name: singleEmployeeState.employee.name,\n                email: singleEmployeeState.employee.email,\n                gender: singleEmployeeState.employee.gender,\n                age: singleEmployeeState.employee.age,\n                designation: singleEmployeeState.employee.designation,\n                department: singleEmployeeState.employee.department,\n                address: singleEmployeeState.employee.address,\n            })\n        } else {\n            resetFields();\n        }\n    }, 50)\n\n    const showDeleteConfirm = (id) => {\n        confirm({\n            title: 'Are you sure delete this employee?',\n            icon: <ExclamationCircleOutlined />,\n            content: 'After this operation employee will successfully deleted from database',\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                handleDeletion(id)\n            },\n        });\n    }\n\n    const handleOkForRegistration = () => {\n        validateFields()\n            .then(values => {\n                resetFields();\n                onFinish(values);\n            })\n            .then(() => { setConfirmLoading(true)\n                setTimeout(() => {\n                    setVisible(false)\n                    setConfirmLoading(false)\n                }, 1000)})\n            .catch(err => {\n                console.log(err);\n            });\n\n    };\n\n    const handleCancelForRegistration = () => {\n        resetFields();\n        setImgData(null)\n        setVisible(false)\n    };\n\n    const onFinish = values => {\n        handleSubmit(values, imgData)\n    };\n\n    const updateEmployee = (values) => {\n        updateSingleEmployee(id, values)\n    }\n\n    const handleOkForUpdate = () => {\n        validateFields()\n            .then((values) => {\n                resetFields();\n                updateEmployee(values);\n            })\n            .then(() => { setConfirmLoading(true)\n                setTimeout(() => {\n                    setVisible(false)\n                    setId(undefined)\n                    setConfirmLoading(false)\n                }, 1000)})\n            .catch(err => {\n            console.log(err);\n        });\n        setVisibleUpdate( false )\n    };\n\n    const handleCancelForUpdate = () => {\n        setVisibleUpdate( false )\n        setId(undefined);\n    };\n\n    if (id === undefined ) {\n        setTimeout(() => {\n            resetFields();\n        },50)\n    }\n\n    const showModalForRegistration= () => {\n        setVisible(true)\n    };\n\n    const showModalForUpdate = () => {\n        setVisibleUpdate(true)\n    }\n\n    const onFinishFailed = ({ errorFields }) => {\n        scrollToField(errorFields[0].name);\n    };\n\n    const showModalForViewEmployee = () => {\n       setVisibleView(true)\n    };\n\n    const handleCancelForViewEmployee = () => {\n        setVisibleView(false)\n        setId(undefined)\n    };\n\n    const columns = [\n        {\n            title: \"Sr.\",\n            dataIndex: \"Sr\",\n            key: \"Sr\"\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"Name\",\n            key: \"Name\",\n            render: (text, record) => <p onClick={() => {\n                showModalForViewEmployee()\n                setId(record.Id)\n            }} style={{cursor: 'pointer', color: 'blue'}}>{text}</p>,\n        },\n        {\n            title: \"Gender\",\n            dataIndex: \"Gender\",\n            key: \"Gender\"\n        },\n        {\n            title: \"JoinDate\",\n            dataIndex: \"joinDate\",\n            key: \"JoinDate\"\n        },\n        {\n            title: \"Actions\",\n            key: \"Actions\",\n            render: (record) => (\n                <span style={{ paddingLeft: '10px' }}>\n                   <FormOutlined style={{color: 'green'}} onClick={() => {\n                       showModalForUpdate()\n                       setId(record.Id)\n                   }} />\n                    {typeOfId === USER_STATE.ADMIN_FULL ?\n                        <DeleteOutlined style={{color: 'red', paddingLeft: '15px'}} onClick={() => showDeleteConfirm(record.Id)} />\n                        : null }\n                </span>\n            ),\n        },\n\n    ];\n\n    const handleSearch = (e) => {\n        setSearch({ words: e.target.value });\n        setPage({\n            current: 1,\n        });\n    };\n\n    const onChange = (page) => {\n        setPage({\n            current: page,\n        });\n    };\n\n    const showTotal = (total) => {\n        return `Total ${total} employees`;\n    }\n\n    const handleChange = (info, {fileList}) => {\n        setImgData(fileList[0].originFileObj);\n        console.log(info)\n    };\n    console.log('i am from onChange', imgData)\n    const uploadButton = (\n        <div className=\"ant-upload-text\"><PlusOutlined />Upload</div>\n    );\n\n\nreturn (\n    <Content style={{ margin: \"0 16px\" }}>\n        <div\n            className=\"site-layout-background\"\n            style={{\n                padding: 24,\n                minHeight: 360,\n                margin: \"16px 0\"\n            }}\n        >\n            <Row>\n                <Col span={12}>\n                    <div>\n                        {typeOfId === USER_STATE.ADMIN_FULL ?\n                            <Button type=\"primary\" onClick={showModalForRegistration}>\n                                <UserAddOutlined />\n                                Add Employee\n                            </Button> : null}\n                        <Modal\n                            getContainer={false}\n                            title={visible ? \"Employee Registration Form\" : 'Update Employee'}\n                            visible={visible ? visible : visibleUpdate}\n                            onOk={visible ? handleOkForRegistration : handleOkForUpdate}\n                            okText={visible ? \"Register\" : 'Update'}\n                            confirmLoading={confirmLoading}\n                            onCancel={visible ? handleCancelForRegistration : handleCancelForUpdate}\n                            maskClosable={false}\n                        >\n                            <Upload\n                                name=\"file\"\n                                listType=\"picture-card\"\n                                showUploadList={false}\n                                beforeUpload={() => false}\n                                onChange={handleChange}\n                            >\n                                {imgData ? <img src={imgData} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                            </Upload>\n                                <Form {...layout}\n                                      form={form}\n                                      name=\"nest-messages\"\n                                      onFinish={visible ? onFinish : updateEmployee}\n                                      onFinishFailed={onFinishFailed}\n                                >\n                                    <Form.Item\n                                        name={'name'}\n                                        label=\"Name\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input placeholder='Please Input' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'email'}\n                                        label=\"Email\"\n                                        rules={[\n                                            {\n                                                type: 'email',\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input placeholder='Please enter your email' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name=\"age\"\n                                        label=\"Age\"\n                                        rules={[\n                                            {\n                                                type: 'number',\n                                                required: true,\n                                                min: 21,\n                                                max: 99\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber  type=\"number\" placeholder='age' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name=\"gender\"\n                                        label=\"Gender\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Select\n                                            placeholder=\"Select a gender\"\n                                            allowClear\n                                        >\n                                            <Option value=\"male\">male</Option>\n                                            <Option value=\"female\">female</Option>\n                                            <Option value=\"other\">other</Option>\n                                        </Select>\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'designation'}\n                                        label=\"Designation\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input  placeholder='Please enter your designation' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'department'}\n                                        label=\"Department\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input  placeholder='Please enter your department' />\n                                    </Form.Item>\n                                    <Form.Item name={'address'} label=\"Address\"   rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}>\n                                        <Input.TextArea placeholder='Please add address' />\n                                    </Form.Item>\n                                </Form>\n                        </Modal>\n\n                    </div>\n                    <Modal\n                        title='Viewing Employee'\n                        visible={visibleView}\n                        maskClosable={false}\n                        onCancel={handleCancelForViewEmployee}\n                        footer={null}\n                    >\n                        {!singleEmployeeState ?\n                            <Spin tip=\"Loading...\"  /> :\n                            <div>\n                                <Text strong>Name: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.name}</Text>\n                                <br />\n                                <Text strong>Age: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.age}</Text>\n                                <br />\n                                <Text strong>Gender: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.gender}</Text>\n                                <br />\n                                <Text strong>Email: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.email}</Text>\n                                <br />\n                                <Text strong>JoinDate: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.joinDate.split('T')[0]}</Text>\n                                <br />\n                                <Text strong>Department: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.department}</Text>\n                                <br />\n                                <Text strong>Designation: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.designation}</Text>\n                                <br />\n                                <Text strong>Address: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.address}</Text>\n                            </div>\n                        }\n                    </Modal>\n                </Col>\n                <Col span={6} >\n                    <Radio.Group>\n                        <Radio.Button >button</Radio.Button>\n                        <Radio.Button >button</Radio.Button>\n                        <Radio.Button >button</Radio.Button>\n                    </Radio.Group>\n                </Col>\n                <Col span={6} >\n                    <Form.Item>\n                        <Input placeholder=\"filter by name\"  onChange={handleSearch} />\n                    </Form.Item>\n                </Col>\n            </Row>\n            {loading ? (\n                <Spin size=\"large\" tip=\"Loading...\" style={{ paddingTop: 100, width: 900 }} />\n            ) : (\n                <Table\n                    rowKey={(obj) => obj.Id}\n                    columns={columns}\n                    dataSource={data}\n                    pagination={\n                        {\n                        current: page.current,\n                        onChange: onChange,\n                        total: {empLength},\n                        showTotal: showTotal,\n                        showQuickJumper: true,\n                        showSizeChanger: true,\n                    }}\n                    scroll={{ y: 240 }}\n                />\n            )}\n        </div>\n    </Content>\n);\n}\n\nCRUDEmployee.defaultProps ={};\n\nCRUDEmployee.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFetching: PropTypes.func.isRequired,\n    handleDeletion: PropTypes.func.isRequired,\n    getSingleEmployee: PropTypes.func.isRequired,\n    updateSingleEmployee: PropTypes.func.isRequired,\n    employeeState: PropTypes.any,\n    singleEmployeeState: PropTypes.any,\n    deletion: PropTypes.bool,\n    loading: PropTypes.bool,\n    Success: PropTypes.bool,\n    onUpdate: PropTypes.bool,\n};\n\nCRUDEmployee.styles = {};\n\nexport default CRUDEmployee;\n"]},"metadata":{},"sourceType":"module"}