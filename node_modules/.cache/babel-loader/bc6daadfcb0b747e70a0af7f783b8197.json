{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/layout/Layout.view.js\";\nimport { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Fragment, useEffect } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport AppRoutes from '../../AppRoutes';\nimport { getUser } from '../auth/auth.api';\nimport storage from '../../common/storage';\nimport { AUTH_ROUTES, USER_STATE } from '../../common/constants';\n\nconst Layout = ({\n  history,\n  location,\n  getUserFromApi,\n  isAuthenticated\n}) => {\n  useEffect(() => {\n    if (isAuthenticated && location && location.pathname) {\n      if (get(storage.get('user'), 'user.typeOfId', 1)) {\n        console.log('typeOfId and Path', true);\n      } else {\n        console.log('typeOfId', false);\n      }\n\n      history.push(AUTH_ROUTES.includes(location.pathname) ? '/dashboard' : location.pathname);\n    } else if (!isAuthenticated && get(storage.get('user'), 'token')) {\n      getUserFromApi();\n    } // eslint-disable-next-line\n\n  }, [getUserFromApi, isAuthenticated, history]);\n  return [React.createElement(Fragment, {\n    key: \"redirect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, isAuthenticated && React.createElement(Redirect, {\n    to: AUTH_ROUTES.includes(location.pathname) ? '/dashboard' : location.pathname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    key: \"app\",\n    id: \"app-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(AppRoutes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))];\n};\n\nLayout.defaultProps = {\n  isAuthenticated: false\n};\nLayout.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  getUser: PropTypes.func,\n  history: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.getIn(['auth', 'isAuthenticated'])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUserFromApi: () => {\n    dispatch(getUser());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Layout));","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/layout/Layout.view.js"],"names":["get","PropTypes","connect","React","Fragment","useEffect","withRouter","Redirect","AppRoutes","getUser","storage","AUTH_ROUTES","USER_STATE","Layout","history","location","getUserFromApi","isAuthenticated","pathname","console","log","push","includes","defaultProps","propTypes","bool","func","object","isRequired","mapStateToProps","state","getIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Fragment, useEffect } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport AppRoutes from '../../AppRoutes';\nimport { getUser } from '../auth/auth.api';\nimport storage from '../../common/storage';\nimport { AUTH_ROUTES, USER_STATE } from '../../common/constants';\n\nconst Layout = ({\n  history,\n  location,\n  getUserFromApi,\n  isAuthenticated,\n}) => {\n  useEffect(() => {\n    if (isAuthenticated && location && location.pathname ) {\n      if (get(storage.get('user'), 'user.typeOfId', 1)) {\n        console.log('typeOfId and Path', true);\n      }else {\n        console.log('typeOfId', false);\n      }\n      history.push(\n        AUTH_ROUTES.includes(location.pathname)\n          ? '/dashboard'\n          : location.pathname,\n      );\n    } else if (!isAuthenticated && get(storage.get('user'), 'token')) {\n      getUserFromApi()\n    }\n    // eslint-disable-next-line\n  },[getUserFromApi, isAuthenticated, history]);\n\n  return [\n    <Fragment key=\"redirect\">\n      {isAuthenticated && (\n        <Redirect\n          to={\n            AUTH_ROUTES.includes(location.pathname)\n              ? '/dashboard'\n              : location.pathname\n          }\n        />\n      )}\n    </Fragment>,\n    <div key=\"app\" id=\"app-wrapper\">\n      <AppRoutes />\n    </div>,\n  ];\n};\n\nLayout.defaultProps = {\n  isAuthenticated: false,\n};\n\nLayout.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  getUser: PropTypes.func,\n  history: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.getIn(['auth', 'isAuthenticated']),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUserFromApi: () => {\n    dispatch(getUser());\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Layout));\n"]},"metadata":{},"sourceType":"module"}