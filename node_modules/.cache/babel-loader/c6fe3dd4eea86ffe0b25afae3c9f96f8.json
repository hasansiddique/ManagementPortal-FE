{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport axios from 'axios';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducers from './rootReducer';\nconst logger = createLogger();\n\nconst customMiddleWare = next => action => {\n  axios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    if (error.status === 401) {\n      // do something when unauthorized\n      console.log('you are are unauthorized need refresh token');\n    }\n\n    return Promise.reject(error);\n  });\n  console.log(\"Middleware triggered:\", action);\n  next(action);\n};\n\nconst configureStore = predefinedState => {\n  return createStore(reducers, predefinedState, applyMiddleware(logger, customMiddleWare, thunk));\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/state/configureStore.js"],"names":["createStore","applyMiddleware","axios","createLogger","thunk","reducers","logger","customMiddleWare","next","action","interceptors","response","use","error","status","console","log","Promise","reject","configureStore","predefinedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,QAAP,MAAqB,eAArB;AAEA,MAAMC,MAAM,GAAGH,YAAY,EAA3B;;AACA,MAAMI,gBAAgB,GAAGC,IAAI,IAAIC,MAAM,IAAI;AACzCP,EAAAA,KAAK,CAACQ,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAUD,QAAV,EAAoB;AAClD,WAAOA,QAAP;AACD,GAFD,EAEG,UAAUE,KAAV,EAAiB;AAClB,QAAGA,KAAK,CAACC,MAAN,KAAiB,GAApB,EAAyB;AACvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACD,GARD;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCP,MAArC;AACAD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACD,CAZD;;AAaA,MAAMU,cAAc,GAAIC,eAAD,IAAqB;AAC1C,SAAOpB,WAAW,CAChBK,QADgB,EAEhBe,eAFgB,EAGhBnB,eAAe,CACbK,MADa,EAEXC,gBAFW,EAGbH,KAHa,CAHC,CAAlB;AASD,CAVD;;AAYA,eAAee,cAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport axios from 'axios';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport reducers from './rootReducer';\n\nconst logger = createLogger();\nconst customMiddleWare = next => action => {\n  axios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    if(error.status === 401) {\n      // do something when unauthorized\n      console.log('you are are unauthorized need refresh token')\n    }\n    return Promise.reject(error);\n  });\n  console.log(\"Middleware triggered:\", action);\n  next(action);\n}\nconst configureStore = (predefinedState) => {\n  return createStore(\n    reducers,\n    predefinedState,\n    applyMiddleware(\n      logger,\n        customMiddleWare,\n      thunk,\n    ),\n  );\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}