{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/CUD.Employee.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { UserAddOutlined, FormOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button, Select, Typography } from \"antd\";\nconst {\n  Content\n} = Layout;\nconst {\n  confirm\n} = Modal;\nconst {\n  Option\n} = Select;\nconst {\n  Text\n} = Typography;\nconst layout = {\n  labelCol: {\n    span: 7\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst CUDEmployee = ({\n  handleSubmit,\n  handleFetching,\n  employeeState,\n  loading,\n  Success,\n  handleDeletion,\n  deletion,\n  getSingleEmployee,\n  singleEmployeeState,\n  updateSingleEmployee,\n  onUpdate\n}) => {\n  const [visible, setVisible] = useState(false);\n  const [visibleUpdate, setVisibleUpdate] = useState(false);\n  const [visibleView, setVisibleView] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [search, setSearch] = useState({\n    words: ''\n  });\n  const [page, setPage] = useState({\n    current: 1\n  });\n  const [id, setId] = useState(''); // later i will add condition for different admins\n\n  const typeOfId = 1;\n  useEffect(() => {\n    handleFetching();\n  }, [handleFetching, Success, deletion, onUpdate]);\n  useEffect(() => {\n    if (id) {\n      getSingleEmployee(id);\n    }\n  }, [getSingleEmployee, id]);\n  let data = !loading && employeeState ? employeeState.employee.map((row, index) => ({\n    Name: row.name.charAt(0).toUpperCase() + row.name.slice(1),\n    Gender: row.gender.charAt(0).toUpperCase() + row.gender.slice(1),\n    Email: row.email.charAt(0).toUpperCase() + row.email.slice(1),\n    Sr: index,\n    Id: row._id\n  })) : [];\n  data = data.filter(item => item.Name.toLowerCase().includes(search.words.toLowerCase()));\n  const empLength = !loading && employeeState ? employeeState.length : 0;\n  const [form] = Form.useForm();\n  const {\n    validateFields,\n    resetFields,\n    setFieldsValue,\n    scrollToField\n  } = form;\n  setTimeout(() => {\n    if (id && singleEmployeeState && singleEmployeeState.employee) {\n      setFieldsValue({\n        name: singleEmployeeState.employee.name,\n        email: singleEmployeeState.employee.email,\n        gender: singleEmployeeState.employee.gender,\n        age: singleEmployeeState.employee.age,\n        designation: singleEmployeeState.employee.designation,\n        department: singleEmployeeState.employee.department,\n        address: singleEmployeeState.employee.address\n      });\n    } else {\n      resetFields();\n    }\n  }, 50);\n\n  const showDeleteConfirm = id => {\n    confirm({\n      title: 'Are you sure delete this employee?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      content: 'After this operation employee will successfully deleted from database',\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n\n      onOk() {\n        handleDeletion(id);\n      }\n\n    });\n  };\n\n  const handleOkForRegistration = () => {\n    validateFields().then(values => {\n      resetFields();\n      onFinish(values);\n    }).then(() => {\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setConfirmLoading(false);\n      }, 1000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleCancelForRegistration = () => {\n    resetFields();\n    setVisible(false);\n  };\n\n  const onFinish = values => {\n    handleSubmit(values);\n  };\n\n  const updateEmployee = values => {\n    updateSingleEmployee(id, values);\n  };\n\n  const handleOkForUpdate = () => {\n    validateFields().then(values => {\n      resetFields();\n      updateEmployee(values);\n    }).then(() => {\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setId(undefined);\n        setConfirmLoading(false);\n      }, 1000);\n    }).catch(err => {\n      console.log(err);\n    });\n    setVisibleUpdate(false);\n  };\n\n  const handleCancelForUpdate = () => {\n    setVisibleUpdate(false);\n    setId(undefined);\n  };\n\n  if (id === undefined) {\n    setTimeout(() => {\n      resetFields();\n    }, 50);\n  }\n\n  const showModalForRegistration = () => {\n    setVisible(true);\n  };\n\n  const showModalForUpdate = () => {\n    setVisibleUpdate(true);\n  };\n\n  const onFinishFailed = ({\n    errorFields\n  }) => {\n    scrollToField(errorFields[0].name);\n  };\n\n  const showModalForViewEmployee = () => {\n    setVisibleView(true);\n  };\n\n  const handleCancelForViewEmployee = () => {\n    setVisibleView(false);\n    setId(undefined);\n  };\n\n  const columns = [{\n    title: \"Sr.\",\n    dataIndex: \"Sr\",\n    key: \"Sr\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"Name\",\n    key: \"Name\",\n    render: (text, record) => React.createElement(\"p\", {\n      onClick: () => {\n        showModalForViewEmployee();\n        setId(record.Id);\n      },\n      style: {\n        cursor: 'pointer',\n        color: 'blue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, text)\n  }, {\n    title: \"Gender\",\n    dataIndex: \"Gender\",\n    key: \"Gender\"\n  }, {\n    title: \"Email\",\n    dataIndex: \"Email\",\n    key: \"Email\"\n  }, {\n    title: \"Actions\",\n    key: \"Actions\",\n    render: record => React.createElement(\"span\", {\n      style: {\n        paddingLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(FormOutlined, {\n      style: {\n        color: 'green'\n      },\n      onClick: () => {\n        showModalForUpdate();\n        setId(record.Id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), typeOfId === 1 ? React.createElement(DeleteOutlined, {\n      style: {\n        color: 'red',\n        paddingLeft: '15px'\n      },\n      onClick: () => showDeleteConfirm(record.Id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }) : null)\n  }];\n\n  const handleSearch = e => {\n    setSearch({\n      words: e.target.value\n    });\n    setPage({\n      current: 1\n    });\n  };\n\n  const onChange = page => {\n    setPage({\n      current: page\n    });\n  };\n\n  const showTotal = total => {\n    return `Total ${total} employees`;\n  };\n\n  return React.createElement(Content, {\n    style: {\n      margin: \"0 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"site-layout-background\",\n    style: {\n      padding: 24,\n      minHeight: 360,\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModalForRegistration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(UserAddOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }), \"Add Employee\"), React.createElement(Modal, {\n    getContainer: false,\n    title: visible ? \"Employee Registration Form\" : 'Update Employee',\n    visible: visible ? visible : visibleUpdate,\n    onOk: visible ? handleOkForRegistration : handleOkForUpdate,\n    okText: visible ? \"Register\" : 'Update',\n    confirmLoading: confirmLoading,\n    onCancel: visible ? handleCancelForRegistration : handleCancelForUpdate,\n    maskClosable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    form: form,\n    name: \"nest-messages\",\n    onFinish: visible ? onFinish : updateEmployee,\n    onFinishFailed: onFinishFailed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: 'name',\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'email',\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"age\",\n    label: \"Age\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    type: \"number\",\n    placeholder: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"gender\",\n    label: \"Gender\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Select a gender\",\n    allowClear: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(Option, {\n    value: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, \"male\"), React.createElement(Option, {\n    value: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"female\"), React.createElement(Option, {\n    value: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, \"other\"))), React.createElement(Form.Item, {\n    name: 'designation',\n    label: \"Designation\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your designation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'department',\n    label: \"Department\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your department\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'address',\n    label: \"Address\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    placeholder: \"Please add address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  })))))), React.createElement(Col, {\n    span: 12,\n    style: {\n      paddingLeft: 180\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Filter By\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"filter by name\",\n    size: \"small\",\n    onChange: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  })))), React.createElement(Modal, {\n    title: \"Viewing Employee\",\n    visible: visibleView,\n    maskClosable: false,\n    onCancel: handleCancelForViewEmployee,\n    footer: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, !singleEmployeeState ? React.createElement(Spin, {\n    size: \"large\",\n    tip: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.name), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, \"Age: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.age), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, \"Gender: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.gender), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, \"Email: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.email), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, \"JoinDate: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.joinDate.split('T')[0]), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"Department: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.department), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, \"Designation: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.designation), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }), React.createElement(Text, {\n    strong: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, \"Address: \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, singleEmployeeState && singleEmployeeState.employee.address))), loading ? React.createElement(Spin, {\n    size: \"large\",\n    tip: \"Loading...\",\n    style: {\n      paddingTop: 100,\n      width: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }) : React.createElement(Table, {\n    rowKey: obj => obj.Id,\n    columns: columns,\n    dataSource: data,\n    pagination: {\n      pageSize: 7,\n      current: page.current,\n      onChange: onChange,\n      total: {\n        empLength\n      },\n      showTotal: showTotal\n    },\n    scroll: {\n      y: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  })));\n};\n\nCUDEmployee.defaultProps = {};\nCUDEmployee.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleFetching: PropTypes.func.isRequired,\n  handleDeletion: PropTypes.func.isRequired,\n  getSingleEmployee: PropTypes.func.isRequired,\n  updateSingleEmployee: PropTypes.func.isRequired,\n  employeeState: PropTypes.any,\n  singleEmployeeState: PropTypes.any,\n  deletion: PropTypes.bool,\n  loading: PropTypes.bool,\n  Success: PropTypes.bool,\n  onUpdate: PropTypes.bool\n};\nCUDEmployee.styles = {};\nexport default CUDEmployee;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/CUD.Employee.js"],"names":["React","useState","useEffect","PropTypes","UserAddOutlined","FormOutlined","DeleteOutlined","ExclamationCircleOutlined","Layout","Form","Row","Col","Input","Spin","InputNumber","Table","Modal","Button","Select","Typography","Content","confirm","Option","Text","layout","labelCol","span","wrapperCol","CUDEmployee","handleSubmit","handleFetching","employeeState","loading","Success","handleDeletion","deletion","getSingleEmployee","singleEmployeeState","updateSingleEmployee","onUpdate","visible","setVisible","visibleUpdate","setVisibleUpdate","visibleView","setVisibleView","confirmLoading","setConfirmLoading","search","setSearch","words","page","setPage","current","id","setId","typeOfId","data","employee","map","row","index","Name","name","charAt","toUpperCase","slice","Gender","gender","Email","email","Sr","Id","_id","filter","item","toLowerCase","includes","empLength","length","form","useForm","validateFields","resetFields","setFieldsValue","scrollToField","setTimeout","age","designation","department","address","showDeleteConfirm","title","icon","content","okText","okType","cancelText","onOk","handleOkForRegistration","then","values","onFinish","catch","err","console","log","handleCancelForRegistration","updateEmployee","handleOkForUpdate","undefined","handleCancelForUpdate","showModalForRegistration","showModalForUpdate","onFinishFailed","errorFields","showModalForViewEmployee","handleCancelForViewEmployee","columns","dataIndex","key","render","text","record","cursor","color","paddingLeft","handleSearch","e","target","value","onChange","showTotal","total","margin","padding","minHeight","required","type","joinDate","split","paddingTop","width","obj","pageSize","y","defaultProps","propTypes","func","isRequired","any","bool","styles"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserAddOutlined, FormOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button, Select, Typography } from \"antd\";\n\nconst { Content } = Layout;\nconst { confirm } = Modal;\nconst { Option } = Select;\nconst { Text } = Typography;\n\n\nconst layout = {\n    labelCol: {\n        span: 7,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst CUDEmployee = ({\n                            handleSubmit,\n                            handleFetching,\n                            employeeState,\n                            loading,\n                            Success,\n                            handleDeletion,\n                            deletion,\n                            getSingleEmployee,\n                            singleEmployeeState,\n                            updateSingleEmployee,\n                            onUpdate,\n\n }) => {\n    const [visible, setVisible] = useState(false)\n    const [visibleUpdate, setVisibleUpdate] = useState(false)\n    const [visibleView, setVisibleView] = useState(false)\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [search, setSearch] = useState({ words: '' });\n    const [page, setPage] = useState({ current: 1 });\n    const [id, setId] = useState('')\n\n    // later i will add condition for different admins\n    const typeOfId = 1;\n\n    useEffect(() => {\n        handleFetching();\n    },[handleFetching, Success, deletion, onUpdate ])\n\n    useEffect(() => {\n        if (id) {\n            getSingleEmployee(id)\n        }\n    }, [getSingleEmployee, id,]);\n\n\n    let data = (!loading && employeeState ? employeeState.employee.map((row, index) => ({\n        Name: row.name.charAt(0).toUpperCase() + row.name.slice(1),\n        Gender: row.gender.charAt(0).toUpperCase() + row.gender.slice(1),\n        Email: row.email.charAt(0).toUpperCase() + row.email.slice(1),\n        Sr: index,\n        Id: row._id,\n    })): [] );\n\n     data = data.filter((item) =>\n        item.Name.toLowerCase().includes(search.words.toLowerCase())\n    );\n\n     const empLength = !loading && employeeState ? employeeState.length : 0;\n     const [form] = Form.useForm();\n     const { validateFields, resetFields, setFieldsValue, scrollToField } = form;\n\n    setTimeout(() => {\n        if (id && singleEmployeeState && singleEmployeeState.employee ) {\n            setFieldsValue({\n                name: singleEmployeeState.employee.name,\n                email: singleEmployeeState.employee.email,\n                gender: singleEmployeeState.employee.gender,\n                age: singleEmployeeState.employee.age,\n                designation: singleEmployeeState.employee.designation,\n                department: singleEmployeeState.employee.department,\n                address: singleEmployeeState.employee.address,\n            })\n        } else {\n            resetFields();\n        }\n    }, 50)\n\n    const showDeleteConfirm = (id) => {\n        confirm({\n            title: 'Are you sure delete this employee?',\n            icon: <ExclamationCircleOutlined />,\n            content: 'After this operation employee will successfully deleted from database',\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                handleDeletion(id)\n            },\n        });\n    }\n\n    const handleOkForRegistration = () => {\n        validateFields()\n            .then(values => {\n                resetFields();\n                onFinish(values);\n            })\n            .then(() => { setConfirmLoading(true)\n                setTimeout(() => {\n                    setVisible(false)\n                    setConfirmLoading(false)\n                }, 1000)})\n            .catch(err => {\n                console.log(err);\n            });\n\n    };\n\n    const handleCancelForRegistration = () => {\n        resetFields();\n        setVisible(false)\n    };\n\n    const onFinish = values => {\n        handleSubmit(values)\n    };\n\n    const updateEmployee = (values) => {\n        updateSingleEmployee(id, values)\n    }\n\n    const handleOkForUpdate = () => {\n        validateFields()\n            .then((values) => {\n                resetFields();\n                updateEmployee(values);\n            })\n            .then(() => { setConfirmLoading(true)\n                setTimeout(() => {\n                    setVisible(false)\n                    setId(undefined)\n                    setConfirmLoading(false)\n                }, 1000)})\n            .catch(err => {\n            console.log(err);\n        });\n        setVisibleUpdate( false )\n    };\n\n    const handleCancelForUpdate = () => {\n        setVisibleUpdate( false )\n        setId(undefined);\n    };\n\n    if (id === undefined ) {\n        setTimeout(() => {\n            resetFields();\n        },50)\n    }\n\n    const showModalForRegistration= () => {\n        setVisible(true)\n    };\n\n    const showModalForUpdate = () => {\n        setVisibleUpdate(true)\n    }\n\n    const onFinishFailed = ({ errorFields }) => {\n        scrollToField(errorFields[0].name);\n    };\n\n    const showModalForViewEmployee = () => {\n       setVisibleView(true)\n    };\n    \n    const handleCancelForViewEmployee = () => {\n        setVisibleView(false)\n        setId(undefined)\n    };\n\n    const columns = [\n        {\n            title: \"Sr.\",\n            dataIndex: \"Sr\",\n            key: \"Sr\"\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"Name\",\n            key: \"Name\",\n            render: (text, record) => <p onClick={() => {\n                showModalForViewEmployee()\n                setId(record.Id)\n            }} style={{cursor: 'pointer', color: 'blue'}}>{text}</p>,\n        },\n        {\n            title: \"Gender\",\n            dataIndex: \"Gender\",\n            key: \"Gender\"\n        },\n        {\n            title: \"Email\",\n            dataIndex: \"Email\",\n            key: \"Email\"\n        },\n        {\n            title: \"Actions\",\n            key: \"Actions\",\n            render: (record) => (\n                <span style={{ paddingLeft: '10px' }}>\n                   <FormOutlined style={{color: 'green'}} onClick={() => {\n                       showModalForUpdate()\n                       setId(record.Id)\n                   }} />\n                    {typeOfId === 1 ?\n                        <DeleteOutlined style={{color: 'red', paddingLeft: '15px'}} onClick={() => showDeleteConfirm(record.Id)} />\n                        : null }\n                </span>\n            ),\n        },\n\n    ];\n\n    const handleSearch = (e) => {\n        setSearch({ words: e.target.value });\n        setPage({\n            current: 1,\n        });\n    };\n\n    const onChange = (page) => {\n        setPage({\n            current: page,\n        });\n    };\n\n    const showTotal = (total) => {\n        return `Total ${total} employees`;\n    }\nreturn (\n    <Content style={{ margin: \"0 16px\" }}>\n        <div\n            className=\"site-layout-background\"\n            style={{\n                padding: 24,\n                minHeight: 360,\n                margin: \"16px 0\"\n            }}\n        >\n            <Row>\n                <Col span={7}>\n                    <div>\n                        <Button type=\"primary\" onClick={showModalForRegistration}>\n                            <UserAddOutlined />\n                            Add Employee\n                        </Button>\n                        <Modal\n                            getContainer={false}\n                            title={visible ? \"Employee Registration Form\" : 'Update Employee'}\n                            visible={visible ? visible : visibleUpdate}\n                            onOk={visible ? handleOkForRegistration : handleOkForUpdate}\n                            okText={visible ? \"Register\" : 'Update'}\n                            confirmLoading={confirmLoading}\n                            onCancel={visible ? handleCancelForRegistration : handleCancelForUpdate}\n                            maskClosable={false}\n                        >\n                                <Form {...layout}\n                                      form={form}\n                                      name=\"nest-messages\"\n                                      onFinish={visible ? onFinish : updateEmployee}\n                                      onFinishFailed={onFinishFailed}\n                                >\n                                    <Form.Item\n                                        name={'name'}\n                                        label=\"Name\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input placeholder='Please Input' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'email'}\n                                        label=\"Email\"\n                                        rules={[\n                                            {\n                                                type: 'email',\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input placeholder='Please enter your email' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name=\"age\"\n                                        label=\"Age\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber  type=\"number\" placeholder='age' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name=\"gender\"\n                                        label=\"Gender\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Select\n                                            placeholder=\"Select a gender\"\n                                            allowClear\n                                        >\n                                            <Option value=\"male\">male</Option>\n                                            <Option value=\"female\">female</Option>\n                                            <Option value=\"other\">other</Option>\n                                        </Select>\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'designation'}\n                                        label=\"Designation\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input  placeholder='Please enter your designation' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'department'}\n                                        label=\"Department\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input  placeholder='Please enter your department' />\n                                    </Form.Item>\n                                    <Form.Item name={'address'} label=\"Address\"   rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}>\n                                        <Input.TextArea placeholder='Please add address' />\n                                    </Form.Item>\n                                </Form>\n                        </Modal>\n\n                    </div>\n                </Col>\n                <Col span={12} style={{ paddingLeft: 180 }}>\n                    <Form.Item label=\"Filter By\" >\n                        <Input placeholder=\"filter by name\" size=\"small\" onChange={handleSearch} />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Modal\n                title='Viewing Employee'\n                visible={visibleView}\n                maskClosable={false}\n                onCancel={handleCancelForViewEmployee}\n                footer={null}\n            >\n             {!singleEmployeeState ?\n                 <Spin size=\"large\" tip=\"Loading...\"  /> :\n                 <div>\n                     <Text strong>Name: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.name}</Text>\n                     <br />\n                     <Text strong>Age: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.age}</Text>\n                     <br />\n                     <Text strong>Gender: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.gender}</Text>\n                     <br />\n                     <Text strong>Email: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.email}</Text>\n                     <br />\n                     <Text strong>JoinDate: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.joinDate.split('T')[0]}</Text>\n                     <br />\n                     <Text strong>Department: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.department}</Text>\n                     <br />\n                     <Text strong>Designation: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.designation}</Text>\n                     <br />\n                     <Text strong>Address: </Text><Text>{singleEmployeeState && singleEmployeeState.employee.address}</Text>\n                 </div>\n             }\n            </Modal>\n            {loading ? (\n                <Spin size=\"large\" tip=\"Loading...\" style={{ paddingTop: 100, width: 900 }} />\n            ) : (\n                <Table\n                    rowKey={(obj) => obj.Id}\n                    columns={columns}\n                    dataSource={data}\n                    pagination={{\n                        pageSize: 7,\n                        current: page.current,\n                        onChange: onChange,\n                        total: {empLength},\n                        showTotal: showTotal\n                    }}\n                    scroll={{ y: 240 }}\n                />\n            )}\n        </div>\n    </Content>\n);\n}\n\nCUDEmployee.defaultProps ={};\n\nCUDEmployee.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFetching: PropTypes.func.isRequired,\n    handleDeletion: PropTypes.func.isRequired,\n    getSingleEmployee: PropTypes.func.isRequired,\n    updateSingleEmployee: PropTypes.func.isRequired,\n    employeeState: PropTypes.any,\n    singleEmployeeState: PropTypes.any,\n    deletion: PropTypes.bool,\n    loading: PropTypes.bool,\n    Success: PropTypes.bool,\n    onUpdate: PropTypes.bool,\n};\n\nCUDEmployee.styles = {};\n\nexport default CUDEmployee;\n"]},"metadata":{},"sourceType":"module"}