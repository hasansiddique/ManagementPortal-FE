{"ast":null,"code":"import request from '../../common/request';\nimport { HTTP_STATUS } from \"../../common/constants\";\nimport { openNotification } from \"../../components/Notification\";\nimport { requestEmployeeRecord, EmployeeRecordSuccess, EmployeeRecordFailure } from './Employee.actions';\nimport get from \"lodash/get\";\nimport storage from \"../../common/storage\";\nexport const getEmployeeRecord = () => {\n  return async dispatch => {\n    dispatch(requestEmployeeRecord());\n\n    try {\n      const userId = get(storage.get('user'), 'user.id');\n      const res = await request.get(`/v1/employee/${userId}/record`);\n      dispatch(EmployeeRecordSuccess());\n      return res;\n    } catch (err) {\n      dispatch(EmployeeRecordFailure());\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/employee/Employee.api.js"],"names":["request","HTTP_STATUS","openNotification","requestEmployeeRecord","EmployeeRecordSuccess","EmployeeRecordFailure","get","storage","getEmployeeRecord","dispatch","userId","res","err","response","status","UNAUTHORIZED","type","title","description","NOT_FOUND"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AAEA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,qBAHJ,QAKO,oBALP;AAMA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAIA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;;AACA,QAAI;AACA,YAAMO,MAAM,GAAGJ,GAAG,CAACC,OAAO,CAACD,GAAR,CAAY,MAAZ,CAAD,EAAsB,SAAtB,CAAlB;AACA,YAAMK,GAAG,GAAG,MAAMX,OAAO,CAACM,GAAR,CAAa,gBAAeI,MAAO,SAAnC,CAAlB;AACAD,MAAAA,QAAQ,CAACL,qBAAqB,EAAtB,CAAR;AACA,aAAOO,GAAP;AACH,KALD,CAKE,OAAOC,GAAP,EAAY;AACVH,MAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;;AACA,UAAIO,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAyBb,WAAW,CAACc,YAAzC,EAAwD;AACpDb,QAAAA,gBAAgB,CAAC;AACbc,UAAAA,IAAI,EAAE,OADO;AAEbC,UAAAA,KAAK,EAAE,YAFM;AAGbC,UAAAA,WAAW,EAAE;AAHA,SAAD,CAAhB;AAKH,OAND,MAMO,IAAIN,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwBb,WAAW,CAACkB,SAAxC,EAAmD;AACtDjB,QAAAA,gBAAgB,CAAC;AACbc,UAAAA,IAAI,EAAE,OADO;AAEbC,UAAAA,KAAK,EAAE,WAFM;AAGbC,UAAAA,WAAW,EAAE;AAHA,SAAD,CAAhB;AAKH,OANM,MAMA;AACHhB,QAAAA,gBAAgB,CAAC;AACbc,UAAAA,IAAI,EAAE,OADO;AAEbC,UAAAA,KAAK,EAAE,YAFM;AAGbC,UAAAA,WAAW,EAAE;AAHA,SAAD,CAAhB;AAKH;;AACD,aAAO,IAAP;AACH;AACJ,GA9BD;AA+BH,CAhCM","sourcesContent":["import request from '../../common/request';\nimport {HTTP_STATUS} from \"../../common/constants\";\nimport {openNotification} from \"../../components/Notification\";\n\nimport {\n    requestEmployeeRecord,\n    EmployeeRecordSuccess,\n    EmployeeRecordFailure,\n\n} from './Employee.actions'\nimport get from \"lodash/get\";\nimport storage from \"../../common/storage\";\n\n\n\nexport const getEmployeeRecord = () => {\n    return async (dispatch) => {\n        dispatch(requestEmployeeRecord())\n        try {\n            const userId = get(storage.get('user'), 'user.id');\n            const res = await request.get(`/v1/employee/${userId}/record`);\n            dispatch(EmployeeRecordSuccess());\n            return res;\n        } catch (err) {\n            dispatch(EmployeeRecordFailure())\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}