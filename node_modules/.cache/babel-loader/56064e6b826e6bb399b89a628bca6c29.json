{"ast":null,"code":"import request from '../../common/request';\nimport { HTTP_STATUS } from '../../common/constants';\nimport { openNotification } from '../../components/Notification';\nimport { requestEmployeeCreation, EmployeeCreationSuccess, EmployeeCreationFailure, requestFetchingEmployees, EmployeeFetchingSuccess, EmployeeFetchingFailure, requestEmployeeDeletion, EmployeeDeletionSuccess, EmployeeDeletionFailure, requestSingleEmployee, SingleEmployeeSuccess, SingleEmployeeFailure, requestUpdateEmployee, EmployeeUpdateSuccess, EmployeeUpdateFailure } from './dashboard.actions'; // constants\n\nconst form = new FormData();\nexport const createEmployee = (payload, file) => {\n  const form = new FormData();\n  form.append('file', file);\n  form.append('name', payload.name);\n  form.append('email', payload.email);\n  form.append('age', payload.age);\n  form.append('gender', payload.gender);\n  form.append('designation', payload.designation);\n  form.append('department', payload.department);\n  form.append('address', payload.address);\n  return async dispatch => {\n    dispatch(requestEmployeeCreation());\n\n    try {\n      const res = await request.post('/v1/employee/create', form);\n      dispatch(EmployeeCreationSuccess());\n\n      if (res.status === HTTP_STATUS.CREATED) {\n        openNotification({\n          type: 'success',\n          title: 'Employee Created',\n          description: 'Employee Successfully Registered'\n        });\n      }\n\n      return res;\n    } catch (err) {\n      dispatch(EmployeeCreationFailure());\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};\nexport const getAllEmployees = () => {\n  return async dispatch => {\n    dispatch(requestFetchingEmployees());\n\n    try {\n      const res = await request.get('/v1/employee/');\n      dispatch(EmployeeFetchingSuccess(res.data || {}));\n      return res;\n    } catch (err) {\n      dispatch(EmployeeFetchingFailure(err));\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};\nexport const deleteEmployee = id => {\n  return async dispatch => {\n    dispatch(requestEmployeeDeletion());\n\n    try {\n      const res = await request.delete(`/v1/employee/${id}`);\n      dispatch(EmployeeDeletionSuccess());\n\n      if (res.status === 200) {\n        openNotification({\n          type: 'success',\n          title: 'Employee Deleted',\n          description: 'Employee Successfully Deleted'\n        });\n      }\n\n      return res;\n    } catch (err) {\n      dispatch(EmployeeDeletionFailure);\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};\nexport const getSingleEmployee = id => {\n  return async dispatch => {\n    dispatch(requestSingleEmployee());\n\n    try {\n      const res = await request.get(`/v1/employee/${id}`);\n      dispatch(SingleEmployeeSuccess(res.data || {}));\n      return res;\n    } catch (err) {\n      dispatch(SingleEmployeeFailure(err));\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};\nexport const UpdateSingleEmployee = (id, payload, file) => {\n  form.append('file', file);\n  form.append('name', payload.name);\n  form.append('email', payload.email);\n  form.append('age', payload.age);\n  form.append('gender', payload.gender);\n  form.append('designation', payload.designation);\n  form.append('department', payload.department);\n  form.append('address', payload.address);\n  return async dispatch => {\n    dispatch(requestUpdateEmployee());\n\n    try {\n      const res = await request.put(`/v1/employee/${id}`, form);\n      dispatch(EmployeeUpdateSuccess());\n\n      if (res.status === 200) {\n        openNotification({\n          type: 'success',\n          title: 'Employee Updated',\n          description: 'Employee Successfully Updated'\n        });\n      }\n\n      return res;\n    } catch (err) {\n      dispatch(EmployeeUpdateFailure());\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/dashboard.api.js"],"names":["request","HTTP_STATUS","openNotification","requestEmployeeCreation","EmployeeCreationSuccess","EmployeeCreationFailure","requestFetchingEmployees","EmployeeFetchingSuccess","EmployeeFetchingFailure","requestEmployeeDeletion","EmployeeDeletionSuccess","EmployeeDeletionFailure","requestSingleEmployee","SingleEmployeeSuccess","SingleEmployeeFailure","requestUpdateEmployee","EmployeeUpdateSuccess","EmployeeUpdateFailure","form","FormData","createEmployee","payload","file","append","name","email","age","gender","designation","department","address","dispatch","res","post","status","CREATED","type","title","description","err","response","UNAUTHORIZED","getAllEmployees","get","data","NOT_FOUND","deleteEmployee","id","delete","getSingleEmployee","UpdateSingleEmployee","put"],"mappings":"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","sourcesContent":["import request from '../../common/request';\nimport { HTTP_STATUS } from '../../common/constants';\nimport { openNotification } from '../../components/Notification';\n\nimport {\n    requestEmployeeCreation,\n    EmployeeCreationSuccess,\n    EmployeeCreationFailure,\n\n    requestFetchingEmployees,\n    EmployeeFetchingSuccess,\n    EmployeeFetchingFailure,\n\n    requestEmployeeDeletion,\n    EmployeeDeletionSuccess,\n    EmployeeDeletionFailure,\n\n    requestSingleEmployee,\n    SingleEmployeeSuccess,\n    SingleEmployeeFailure,\n\n    requestUpdateEmployee,\n    EmployeeUpdateSuccess,\n    EmployeeUpdateFailure,\n\n} from './dashboard.actions'\n\n// constants\nconst form = new FormData();\n\nexport const createEmployee = (payload, file) => {\n    const form = new FormData();\n    form.append('file', file)\n    form.append('name', payload.name)\n    form.append('email', payload.email)\n    form.append('age', payload.age)\n    form.append('gender', payload.gender)\n    form.append('designation', payload.designation)\n    form.append('department', payload.department)\n    form.append('address', payload.address)\n    return async (dispatch) => {\n        dispatch(requestEmployeeCreation());\n\n        try {\n            const res = await request.post('/v1/employee/create', form);\n            dispatch(EmployeeCreationSuccess());\n            if (res.status === HTTP_STATUS.CREATED){\n                openNotification({\n                    type: 'success',\n                    title: 'Employee Created',\n                    description: 'Employee Successfully Registered',\n                });\n            }\n            return res;\n        } catch (err) {\n            dispatch(EmployeeCreationFailure());\n            if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    };\n};\n\nexport const getAllEmployees = () => {\n    return async (dispatch) => {\n        dispatch(requestFetchingEmployees());\n        try {\n            const res = await request.get('/v1/employee/');\n            dispatch(EmployeeFetchingSuccess(res.data || {}));\n            return res;\n        } catch (err) {\n            dispatch(EmployeeFetchingFailure(err));\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n\n\nexport const deleteEmployee = (id) => {\n    return async (dispatch) => {\n        dispatch(requestEmployeeDeletion());\n        try {\n            const res = await request.delete(`/v1/employee/${id}`);\n            dispatch(EmployeeDeletionSuccess());\n            if (res.status === 200){\n                openNotification({\n                    type: 'success',\n                    title: 'Employee Deleted',\n                    description: 'Employee Successfully Deleted',\n                });\n            }\n            return res;\n        } catch (err) {\n            dispatch(EmployeeDeletionFailure);\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n\nexport const getSingleEmployee = (id) => {\n    return async (dispatch) => {\n        dispatch(requestSingleEmployee());\n        try {\n            const res = await request.get(`/v1/employee/${id}`);\n            dispatch(SingleEmployeeSuccess(res.data || {}));\n            return res;\n        } catch (err) {\n            dispatch(SingleEmployeeFailure(err));\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n\nexport const UpdateSingleEmployee = (id, payload, file) => {\n    form.append('file', file)\n    form.append('name', payload.name)\n    form.append('email', payload.email)\n    form.append('age', payload.age)\n    form.append('gender', payload.gender)\n    form.append('designation', payload.designation)\n    form.append('department', payload.department)\n    form.append('address', payload.address)\n    return async (dispatch) => {\n        dispatch(requestUpdateEmployee());\n        try {\n            const res = await request.put(`/v1/employee/${id}`, form);\n            dispatch(EmployeeUpdateSuccess());\n            if (res.status === 200){\n                openNotification({\n                    type: 'success',\n                    title: 'Employee Updated',\n                    description: 'Employee Successfully Updated',\n                });\n            }\n            return res;\n        } catch (err) {\n            dispatch(EmployeeUpdateFailure());\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}