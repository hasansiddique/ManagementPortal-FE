{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/Create.Employee.js\";\nimport React, { useState } from 'react'; // import PropTypes from 'prop-types';\n\nimport { UserAddOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button } from \"antd\";\nconst {\n  Content\n} = Layout;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst validateMessages = {\n  required: `name is required!`,\n  types: {\n    email: `email is not validate email!`,\n    number: `number is not a validate number!`\n  },\n  number: {\n    range: `age must be between 0 and 1`\n  }\n};\n\nconst CreateEmployee = () => {\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const loading = false;\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    width: 150\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    width: 150\n  }, {\n    title: 'Address',\n    dataIndex: 'address'\n  }];\n  const data = [];\n\n  for (let i = 0; i < 100; i++) {\n    data.push({\n      key: i,\n      name: `Edward King ${i}`,\n      age: 32,\n      address: `London, Park Lane no. ${i}`\n    });\n  }\n\n  return React.createElement(Content, {\n    style: {\n      margin: \"0 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"site-layout-background\",\n    style: {\n      padding: 24,\n      minHeight: 360,\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(UserAddOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), \"Add Employee\"), React.createElement(Modal, {\n    title: \"Add Employee\",\n    visible: visible,\n    onOk: handleOk,\n    confirmLoading: confirmLoading,\n    onCancel: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: ['user', 'name'],\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: ['user', 'email'],\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: ['user', 'age'],\n    label: \"Age\",\n    rules: [{\n      type: 'number',\n      required: true,\n      min: 0,\n      max: 99\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: ['user', 'address'],\n    label: \"Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    wrapperCol: { ...layout.wrapperCol,\n      offset: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Submit\")))))), React.createElement(Col, {\n    span: 12,\n    style: {\n      paddingLeft: 180\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Search By\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"search by name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })))), loading ? React.createElement(Spin, {\n    size: \"large\",\n    style: {\n      paddingTop: 100,\n      width: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }) : React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: {\n      pageSize: 20\n    },\n    scroll: {\n      y: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })));\n};\n\nCreateEmployee.defaultProps = {};\nCreateEmployee.propTypes = {};\nCreateEmployee.styles = {};\nexport default CreateEmployee;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/Create.Employee.js"],"names":["React","useState","UserAddOutlined","Layout","Form","Row","Col","Input","Spin","InputNumber","Table","Modal","Button","Content","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","CreateEmployee","visible","setVisible","confirmLoading","setConfirmLoading","loading","showModal","handleOk","setTimeout","handleCancel","onFinish","values","console","log","columns","title","dataIndex","width","data","i","push","key","name","age","address","margin","padding","minHeight","type","min","max","offset","paddingLeft","paddingTop","pageSize","y","defaultProps","propTypes","styles"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n\nimport { UserAddOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button  } from \"antd\";\nconst { Content } = Layout;\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst validateMessages = {\n    required: `name is required!`,\n    types: {\n        email: `email is not validate email!`,\n        number: `number is not a validate number!`,\n    },\n    number: {\n        range: `age must be between 0 and 1`,\n    },\n};\n\nconst CreateEmployee = () => {\n    const [visible, setVisible] = useState(false)\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const loading = false;\n\n    const showModal = () => {\n        setVisible(true)\n    };\n\n    const handleOk = () => {\n        setConfirmLoading(true)\n        setTimeout(() => {\n            setVisible(false)\n            setConfirmLoading(false)\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        setVisible(false)\n    };\n\n    const onFinish = values => {\n        console.log(values);\n    };\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            width: 150,\n        },\n        {\n            title: 'Age',\n            dataIndex: 'age',\n            width: 150,\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n        },\n    ];\n\n    const data = [];\n    for (let i = 0; i < 100; i++) {\n        data.push({\n            key: i,\n            name: `Edward King ${i}`,\n            age: 32,\n            address: `London, Park Lane no. ${i}`,\n        });\n    }\nreturn (\n    <Content style={{ margin: \"0 16px\" }}>\n        <div\n            className=\"site-layout-background\"\n            style={{\n                padding: 24,\n                minHeight: 360,\n                margin: \"16px 0\"\n            }}\n        >\n            <Row>\n                <Col span={7}>\n                    <div>\n                        <Button type=\"primary\" onClick={showModal}>\n                            <UserAddOutlined />\n                            Add Employee\n                        </Button>\n                        <Modal\n                            title=\"Add Employee\"\n                            visible={visible}\n                            onOk={handleOk}\n                            confirmLoading={confirmLoading}\n                            onCancel={handleCancel}\n                        >\n                                <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                                    <Form.Item\n                                        name={['user', 'name']}\n                                        label=\"Name\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={['user', 'email']}\n                                        label=\"Email\"\n                                        rules={[\n                                            {\n                                                type: 'email',\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={['user', 'age']}\n                                        label=\"Age\"\n                                        rules={[\n                                            {\n                                                type: 'number',\n                                                required: true,\n                                                min: 0,\n                                                max: 99,\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber />\n                                    </Form.Item>\n                                    <Form.Item name={['user', 'address']} label=\"Address\">\n                                        <Input.TextArea />\n                                    </Form.Item>\n                                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                                        <Button type=\"primary\" htmlType=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Form.Item>\n                                </Form>\n                        </Modal>\n                    </div>\n                </Col>\n                <Col span={12} style={{ paddingLeft: 180 }}>\n                    <Form.Item label=\"Search By\">\n                        <Input placeholder=\"search by name\"/>\n                    </Form.Item>\n                </Col>\n            </Row>\n            {loading ? (\n                <Spin size=\"large\" style={{ paddingTop: 100, width: 900 }} />\n            ) : (\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                    pagination={{ pageSize: 20 }}\n                    scroll={{ y: 240 }}\n                />\n            )}\n        </div>\n    </Content>\n);\n}\n\nCreateEmployee.defaultProps ={};\n\nCreateEmployee.propTypes = {};\n\nCreateEmployee.styles = {};\n\nexport default CreateEmployee;\n"]},"metadata":{},"sourceType":"module"}