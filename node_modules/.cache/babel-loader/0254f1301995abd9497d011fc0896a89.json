{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/CUD.Employee.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { UserAddOutlined, FormOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button, Select } from \"antd\";\nconst {\n  Content\n} = Layout;\nconst {\n  confirm\n} = Modal;\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 7\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst validateMessages = {\n  types: {\n    email: 'please add a valid email!',\n    number: 'please add a number!'\n  },\n  number: {\n    range: 'age must be between 21 and 99'\n  }\n};\n\nconst CUDEmployee = ({\n  handleSubmit,\n  handleFetching,\n  employeeState,\n  loading,\n  Success,\n  handleDeletion,\n  deletion,\n  getSingleEmployee,\n  singleEmployeeState,\n  updateSingleEmployee\n}) => {\n  const [visible, setVisible] = useState(false);\n  const [visibleUpdate, setVisibleUpdate] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [search, setSearch] = useState({\n    words: ''\n  });\n  const [page, setPage] = useState({\n    current: 1\n  });\n  const [form] = Form.useForm();\n  const {\n    validateFields,\n    resetFields,\n    setFieldsValue\n  } = form; // later i will add condition for different admins\n\n  const typeOfId = 1;\n  useEffect(() => {\n    handleFetching();\n  }, [handleFetching, Success, deletion]);\n  useEffect(() => {\n    if (visibleUpdate === true) {\n      getSingleEmployee();\n    }\n  }, [getSingleEmployee]);\n\n  if (singleEmployeeState && singleEmployeeState.employee) {\n    setFieldsValue({\n      name: singleEmployeeState.employee.name,\n      email: singleEmployeeState.employee.email,\n      gender: singleEmployeeState.employee.gender,\n      age: singleEmployeeState.employee.age,\n      designation: singleEmployeeState.employee.designation,\n      department: singleEmployeeState.employee.department,\n      address: singleEmployeeState.employee.address\n    });\n  }\n\n  console.log('singleEmployeeState', singleEmployeeState);\n  let data = !loading && employeeState ? employeeState.employee.map((row, index) => ({\n    Name: row.name.charAt(0).toUpperCase() + row.name.slice(1),\n    Gender: row.gender.charAt(0).toUpperCase() + row.gender.slice(1),\n    Email: row.email.charAt(0).toUpperCase() + row.email.slice(1),\n    Sr: index,\n    Id: row._id\n  })) : [];\n  data = data.filter(item => item.Name.toLowerCase().includes(search.words.toLowerCase()));\n  const empLength = !loading && employeeState ? employeeState.length : 0;\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    validateFields().then(values => {\n      resetFields();\n      onFinish(values);\n    }).then(() => {\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setConfirmLoading(false);\n      }, 1000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleCancel = () => {\n    resetFields();\n    setVisible(false);\n  };\n\n  const onFinish = values => {\n    handleSubmit(values);\n  };\n\n  const showDeleteConfirm = id => {\n    confirm({\n      title: 'Are you sure delete this employee?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }),\n      content: 'After this operation employee will successfully deleted from database',\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n\n      onOk() {\n        handleDeletion(id);\n      }\n\n    });\n  };\n\n  const handleOkForUpdate = () => {\n    validateFields().then(values => {\n      resetFields();\n      update(values);\n    }).catch(err => {\n      console.log(err);\n    });\n    setVisibleUpdate(false);\n  };\n\n  const handleCancelForUpdate = () => {\n    resetFields();\n    setVisibleUpdate(false);\n  };\n\n  const showModalForUpdate = () => {\n    setVisibleUpdate(true);\n  };\n\n  const update = values => {\n    console.log(values);\n  };\n\n  const columns = [{\n    title: \"Sr.\",\n    dataIndex: \"Sr\",\n    key: \"Sr\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"Name\",\n    key: \"Name\",\n    render: (text, record) => React.createElement(\"p\", {\n      onClick: () => console.log(record.Id),\n      style: {\n        cursor: 'pointer',\n        color: 'blue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, text)\n  }, {\n    title: \"Gender\",\n    dataIndex: \"Gender\",\n    key: \"Gender\"\n  }, {\n    title: \"Email\",\n    dataIndex: \"Email\",\n    key: \"Email\"\n  }, {\n    title: \"Actions\",\n    key: \"Actions\",\n    render: record => React.createElement(\"span\", {\n      style: {\n        paddingLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(FormOutlined, {\n      style: {\n        color: 'green'\n      },\n      onClick: () => {\n        getSingleEmployee(record.Id);\n        showModalForUpdate();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), typeOfId === 1 ? React.createElement(DeleteOutlined, {\n      style: {\n        color: 'red',\n        paddingLeft: '15px'\n      },\n      onClick: () => showDeleteConfirm(record.Id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }) : null)\n  }];\n\n  const handleSearch = e => {\n    setSearch({\n      words: e.target.value\n    });\n    setPage({\n      current: 1\n    });\n  };\n\n  const onChange = page => {\n    setPage({\n      current: page\n    });\n  };\n\n  const showTotal = total => {\n    return `Total ${total} employees`;\n  };\n\n  return React.createElement(Content, {\n    style: {\n      margin: \"0 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"site-layout-background\",\n    style: {\n      padding: 24,\n      minHeight: 360,\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(UserAddOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }), \"Add Employee\"), React.createElement(Modal, {\n    title: \"Employee Registration Form\",\n    visible: visible,\n    onOk: handleOk,\n    okText: \"Register\",\n    confirmLoading: confirmLoading,\n    onCancel: handleCancel,\n    maskClosable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    form: form,\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: 'name',\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'email',\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'age',\n    label: \"Age\",\n    rules: [{\n      type: 'number',\n      required: true,\n      min: 21,\n      max: 99\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"gender\",\n    label: \"Gender\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Select a gender\",\n    allowClear: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Option, {\n    value: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"male\"), React.createElement(Option, {\n    value: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"female\"), React.createElement(Option, {\n    value: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, \"other\"))), React.createElement(Form.Item, {\n    name: 'designation',\n    label: \"Designation\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your designation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'department',\n    label: \"Department\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your department\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'address',\n    label: \"Address\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    placeholder: \"Please add address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  })))), React.createElement(Modal, {\n    title: \"Update Employee\",\n    okText: \"Update\",\n    maskClosable: false,\n    visible: visibleUpdate,\n    onOk: handleOkForUpdate,\n    onCancel: handleCancelForUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    form: form,\n    name: \"nest-messages\",\n    onFinish: update,\n    validateMessages: validateMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: 'name',\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'email',\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'age',\n    label: \"Age\",\n    rules: [{\n      type: 'number',\n      required: true,\n      min: 21,\n      max: 99\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"gender\",\n    label: \"Gender\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Select a gender\",\n    allowClear: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, React.createElement(Option, {\n    value: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, \"male\"), React.createElement(Option, {\n    value: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, \"female\"), React.createElement(Option, {\n    value: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, \"other\"))), React.createElement(Form.Item, {\n    name: 'designation',\n    label: \"Designation\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your designation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'department',\n    label: \"Department\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your department\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'address',\n    label: \"Address\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    placeholder: \"Please add address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  })))))), React.createElement(Col, {\n    span: 12,\n    style: {\n      paddingLeft: 180\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Filter By\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"filter by name\",\n    size: \"small\",\n    onChange: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  })))), loading ? React.createElement(Spin, {\n    size: \"large\",\n    tip: \"Loading...\",\n    style: {\n      paddingTop: 100,\n      width: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }) : React.createElement(Table, {\n    rowKey: obj => obj.Id,\n    columns: columns,\n    dataSource: data,\n    pagination: {\n      pageSize: 7,\n      current: page.current,\n      onChange: onChange,\n      total: {\n        empLength\n      },\n      showTotal: showTotal\n    },\n    scroll: {\n      y: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  })));\n};\n\nCUDEmployee.defaultProps = {};\nCUDEmployee.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleFetching: PropTypes.func.isRequired,\n  handleDeletion: PropTypes.func.isRequired,\n  getSingleEmployee: PropTypes.func.isRequired,\n  updateSingleEmployee: PropTypes.func.isRequired,\n  employeeState: PropTypes.any,\n  singleEmployeeState: PropTypes.any,\n  deletion: PropTypes.bool,\n  loading: PropTypes.bool,\n  Success: PropTypes.bool\n};\nCUDEmployee.styles = {};\nexport default CUDEmployee;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/CUD.Employee.js"],"names":["React","useState","useEffect","PropTypes","UserAddOutlined","FormOutlined","DeleteOutlined","ExclamationCircleOutlined","Layout","Form","Row","Col","Input","Spin","InputNumber","Table","Modal","Button","Select","Content","confirm","Option","layout","labelCol","span","wrapperCol","validateMessages","types","email","number","range","CUDEmployee","handleSubmit","handleFetching","employeeState","loading","Success","handleDeletion","deletion","getSingleEmployee","singleEmployeeState","updateSingleEmployee","visible","setVisible","visibleUpdate","setVisibleUpdate","confirmLoading","setConfirmLoading","search","setSearch","words","page","setPage","current","form","useForm","validateFields","resetFields","setFieldsValue","typeOfId","employee","name","gender","age","designation","department","address","console","log","data","map","row","index","Name","charAt","toUpperCase","slice","Gender","Email","Sr","Id","_id","filter","item","toLowerCase","includes","empLength","length","showModal","handleOk","then","values","onFinish","setTimeout","catch","err","handleCancel","showDeleteConfirm","id","title","icon","content","okText","okType","cancelText","onOk","handleOkForUpdate","update","handleCancelForUpdate","showModalForUpdate","columns","dataIndex","key","render","text","record","cursor","color","paddingLeft","handleSearch","e","target","value","onChange","showTotal","total","margin","padding","minHeight","required","type","min","max","paddingTop","width","obj","pageSize","y","defaultProps","propTypes","func","isRequired","any","bool","styles"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserAddOutlined, FormOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button, Select, } from \"antd\";\n\nconst { Content } = Layout;\nconst { confirm } = Modal;\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: {\n        span: 7,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\nconst validateMessages = {\n    types: {\n        email: 'please add a valid email!',\n        number: 'please add a number!',\n    },\n    number: {\n        range: 'age must be between 21 and 99',\n    },\n};\n\nconst CUDEmployee = ({\n                            handleSubmit,\n                            handleFetching,\n                            employeeState,\n                            loading,\n                            Success,\n                            handleDeletion,\n                            deletion,\n                            getSingleEmployee,\n                            singleEmployeeState,\n                            updateSingleEmployee\n\n }) => {\n    const [visible, setVisible] = useState(false)\n    const [visibleUpdate, setVisibleUpdate] = useState(false)\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [search, setSearch] = useState({ words: '' });\n    const [page, setPage] = useState({ current: 1 });\n    const [form] = Form.useForm();\n    const { validateFields, resetFields, setFieldsValue } = form;\n\n    // later i will add condition for different admins\n    const typeOfId = 1;\n\n    useEffect(() => {\n        handleFetching();\n    },[handleFetching, Success, deletion,])\n\n    useEffect(() => {\n        if (visibleUpdate === true) {\n            getSingleEmployee()\n        }\n    }, [getSingleEmployee ]);\n\n    if (singleEmployeeState && singleEmployeeState.employee) {\n        setFieldsValue({\n            name: singleEmployeeState.employee.name,\n            email: singleEmployeeState.employee.email,\n            gender: singleEmployeeState.employee.gender,\n            age: singleEmployeeState.employee.age,\n            designation: singleEmployeeState.employee.designation,\n            department: singleEmployeeState.employee.department,\n            address: singleEmployeeState.employee.address,\n\n        })\n    }\n\n    console.log('singleEmployeeState', singleEmployeeState);\n    let data = (!loading && employeeState ? employeeState.employee.map((row, index) => ({\n        Name: row.name.charAt(0).toUpperCase() + row.name.slice(1),\n        Gender: row.gender.charAt(0).toUpperCase() + row.gender.slice(1),\n        Email: row.email.charAt(0).toUpperCase() + row.email.slice(1),\n        Sr: index,\n        Id: row._id,\n    })): [] );\n\n     data = data.filter((item) =>\n        item.Name.toLowerCase().includes(search.words.toLowerCase())\n    );\n\n     const empLength = !loading && employeeState ? employeeState.length : 0;\n\n\n\n    const showModal = () => {\n        setVisible(true)\n    };\n\n    const handleOk = () => {\n        validateFields()\n            .then(values => {\n                resetFields();\n                onFinish(values);\n            })\n            .then(() => { setConfirmLoading(true)\n                setTimeout(() => {\n                    setVisible(false)\n                    setConfirmLoading(false)\n                }, 1000)})\n            .catch(err => {\n            console.log(err);\n        });\n\n    };\n\n    const handleCancel = () => {\n        resetFields();\n        setVisible(false)\n    };\n\n    const onFinish = values => {\n        handleSubmit(values);\n    };\n\n    const showDeleteConfirm = (id) => {\n        confirm({\n            title: 'Are you sure delete this employee?',\n            icon: <ExclamationCircleOutlined />,\n            content: 'After this operation employee will successfully deleted from database',\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                handleDeletion(id)\n            },\n        });\n    }\n    const handleOkForUpdate = () => {\n        validateFields()\n            .then(values => {\n                resetFields();\n                update(values);\n            }).catch(err => {\n            console.log(err);\n        });\n        setVisibleUpdate( false )\n    };\n    const handleCancelForUpdate = () => {\n        resetFields();\n        setVisibleUpdate( false )\n    };\n    const showModalForUpdate = () => {\n        setVisibleUpdate( true );\n    };\n\n\n\n\n    const update = (values) => {\n        console.log(values)\n    }\n\n\n    const columns = [\n        {\n            title: \"Sr.\",\n            dataIndex: \"Sr\",\n            key: \"Sr\"\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"Name\",\n            key: \"Name\",\n            render: (text, record) => <p onClick={() => console.log(record.Id)} style={{cursor: 'pointer', color: 'blue'}}>{text}</p>,\n        },\n        {\n            title: \"Gender\",\n            dataIndex: \"Gender\",\n            key: \"Gender\"\n        },\n        {\n            title: \"Email\",\n            dataIndex: \"Email\",\n            key: \"Email\"\n        },\n        {\n            title: \"Actions\",\n            key: \"Actions\",\n            render: (record) => (\n                <span style={{ paddingLeft: '10px' }}>\n                   <FormOutlined style={{color: 'green'}} onClick={() => {\n                       getSingleEmployee(record.Id)\n                       showModalForUpdate()\n                   }} />\n                    {typeOfId === 1 ?\n                        <DeleteOutlined style={{color: 'red', paddingLeft: '15px'}} onClick={() => showDeleteConfirm(record.Id)} />\n                        : null }\n                </span>\n            ),\n        },\n\n    ];\n\n    const handleSearch = (e) => {\n        setSearch({ words: e.target.value });\n        setPage({\n            current: 1,\n        });\n    };\n\n    const onChange = (page) => {\n        setPage({\n            current: page,\n        });\n    };\n\n    const showTotal = (total) => {\n        return `Total ${total} employees`;\n    }\nreturn (\n    <Content style={{ margin: \"0 16px\" }}>\n        <div\n            className=\"site-layout-background\"\n            style={{\n                padding: 24,\n                minHeight: 360,\n                margin: \"16px 0\"\n            }}\n        >\n            <Row>\n                <Col span={7}>\n                    <div>\n                        <Button type=\"primary\" onClick={showModal}>\n                            <UserAddOutlined />\n                            Add Employee\n                        </Button>\n                        <Modal\n                            title=\"Employee Registration Form\"\n                            visible={visible}\n                            onOk={handleOk}\n                            okText=\"Register\"\n                            confirmLoading={confirmLoading}\n                            onCancel={handleCancel}\n                            maskClosable={false}\n                        >\n                                <Form {...layout} form={form} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                                    <Form.Item\n                                        name={'name'}\n                                        label=\"Name\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input placeholder='Please Input' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'email'}\n                                        label=\"Email\"\n                                        rules={[\n                                            {\n                                                type: 'email',\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input placeholder='Please enter your email' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'age'}\n                                        label=\"Age\"\n                                        rules={[\n                                            {\n                                                type: 'number',\n                                                required: true,\n                                                min: 21,\n                                                max: 99,\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name=\"gender\"\n                                        label=\"Gender\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Select\n                                            placeholder=\"Select a gender\"\n                                            allowClear\n                                        >\n                                            <Option value=\"male\">male</Option>\n                                            <Option value=\"female\">female</Option>\n                                            <Option value=\"other\">other</Option>\n                                        </Select>\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'designation'}\n                                        label=\"Designation\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input  placeholder='Please enter your designation' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'department'}\n                                        label=\"Department\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input  placeholder='Please enter your department' />\n                                    </Form.Item>\n                                    <Form.Item name={'address'} label=\"Address\"   rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}>\n                                        <Input.TextArea placeholder='Please add address' />\n                                    </Form.Item>\n                                </Form>\n                        </Modal>\n                        <Modal\n                            title=\"Update Employee\"\n                            okText=\"Update\"\n                            maskClosable={false}\n                            visible={visibleUpdate}\n                            onOk={handleOkForUpdate}\n                            onCancel={handleCancelForUpdate}\n                        >\n                            <Form {...layout} form={form} name=\"nest-messages\" onFinish={update} validateMessages={validateMessages}>\n                                <Form.Item\n                                    name={'name'}\n                                    label=\"Name\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}\n                                >\n                                    <Input placeholder='Please Input' />\n                                </Form.Item>\n                                <Form.Item\n                                    name={'email'}\n                                    label=\"Email\"\n                                    rules={[\n                                        {\n                                            type: 'email',\n                                            required: true,\n                                        },\n                                    ]}\n                                >\n                                    <Input placeholder='Please enter your email' />\n                                </Form.Item>\n                                <Form.Item\n                                    name={'age'}\n                                    label=\"Age\"\n                                    rules={[\n                                        {\n                                            type: 'number',\n                                            required: true,\n                                            min: 21,\n                                            max: 99,\n                                        },\n                                    ]}\n                                >\n                                    <InputNumber />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a gender\"\n                                        allowClear\n                                    >\n                                        <Option value=\"male\">male</Option>\n                                        <Option value=\"female\">female</Option>\n                                        <Option value=\"other\">other</Option>\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    name={'designation'}\n                                    label=\"Designation\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}\n                                >\n                                    <Input  placeholder='Please enter your designation' />\n                                </Form.Item>\n                                <Form.Item\n                                    name={'department'}\n                                    label=\"Department\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}\n                                >\n                                    <Input  placeholder='Please enter your department' />\n                                </Form.Item>\n                                <Form.Item name={'address'} label=\"Address\"   rules={[\n                                    {\n                                        required: true,\n                                    },\n                                ]}>\n                                    <Input.TextArea placeholder='Please add address' />\n                                </Form.Item>\n                            </Form>\n                        </Modal>\n                    </div>\n                </Col>\n                <Col span={12} style={{ paddingLeft: 180 }}>\n                    <Form.Item label=\"Filter By\" >\n                        <Input placeholder=\"filter by name\" size=\"small\" onChange={handleSearch} />\n                    </Form.Item>\n                </Col>\n            </Row>\n            {loading ? (\n                <Spin size=\"large\" tip=\"Loading...\" style={{ paddingTop: 100, width: 900 }} />\n            ) : (\n                <Table\n                    rowKey={(obj) => obj.Id}\n                    columns={columns}\n                    dataSource={data}\n                    pagination={{\n                        pageSize: 7,\n                        current: page.current,\n                        onChange: onChange,\n                        total: {empLength},\n                        showTotal: showTotal\n                    }}\n                    scroll={{ y: 240 }}\n                />\n            )}\n        </div>\n    </Content>\n);\n}\n\nCUDEmployee.defaultProps ={};\n\nCUDEmployee.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFetching: PropTypes.func.isRequired,\n    handleDeletion: PropTypes.func.isRequired,\n    getSingleEmployee: PropTypes.func.isRequired,\n    updateSingleEmployee: PropTypes.func.isRequired,\n    employeeState: PropTypes.any,\n    singleEmployeeState: PropTypes.any,\n    deletion: PropTypes.bool,\n    loading: PropTypes.bool,\n    Success: PropTypes.bool,\n};\n\nCUDEmployee.styles = {};\n\nexport default CUDEmployee;\n"]},"metadata":{},"sourceType":"module"}