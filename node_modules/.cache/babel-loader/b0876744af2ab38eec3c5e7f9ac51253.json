{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/auth/views/UpdatePassword.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst UpdatePassword = ({\n  handleSubmit,\n  isUpdatedPassword\n}) => {\n  const onFinish = values => {\n    handleSubmit(values);\n  };\n\n  return React.createElement(React.Fragment, null, isUpdatedPassword && React.createElement(Redirect, {\n    to: \"/user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) && window.location.reload(), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Update Password\"), React.createElement(Form, {\n    onFinish: onFinish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    name: \"currentpassword\",\n    rules: [{\n      required: true,\n      message: 'Please input your current Password!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    prefix: React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Current Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"newpassword\",\n    rules: [{\n      required: true,\n      message: 'Please input your new Password!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    prefix: React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"New Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/user/forgot-password\",\n    href: \"/user/forgot-password\",\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Forgot password\")), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Update Password\")), React.createElement(Button, {\n    type: \"secondary\",\n    style: {\n      width: '100%',\n      marginTop\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Cancel\")));\n};\n\nUpdatePassword.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  isUpdatedPassword: PropTypes.bool.isRequired\n};\nUpdatePassword.defaultProps = {};\nUpdatePassword.styles = {};\nexport default UpdatePassword;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/auth/views/UpdatePassword.js"],"names":["React","PropTypes","Form","Input","Button","LockOutlined","Link","Redirect","UpdatePassword","handleSubmit","isUpdatedPassword","onFinish","values","window","location","reload","required","message","float","width","marginTop","propTypes","func","isRequired","bool","defaultProps","styles"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,IADJ,EACUC,KADV,EACiBC,MADjB,QAEO,MAFP;AAGA,SAAUC,YAAV,QAA8B,mBAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAyC;AAC5D,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzBH,IAAAA,YAAY,CAACG,MAAD,CAAZ;AACH,GAFD;;AAGA,SACI,0CACKF,iBAAiB,IAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,IAAgDG,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EADrD,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAEJ,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,iBADT;AAEI,IAAA,KAAK,EAAE,CAAC;AACJK,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,KAAD,CAAO,QAAP;AACI,IAAA,MAAM,EAAE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAHJ,EAgBI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,KAAK,EAAE,CAAC;AACJD,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,KAAD,CAAO,QAAP;AACI,IAAA,MAAM,EAAE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAhBJ,EA6BI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,uBAAT;AAAiC,IAAA,IAAI,EAAC,uBAAtC;AAA8D,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CA7BJ,EAoCI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,QAAQ,EAAC,QAFb;AAGI,IAAA,SAAS,EAAC,mBAHd;AAII,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CApCJ,EA8CI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA;AAAjB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CJ,CAHJ,CADJ;AA4DH,CAhED;;AAkEAZ,cAAc,CAACa,SAAf,GAA2B;AACvBZ,EAAAA,YAAY,EAAER,SAAS,CAACqB,IAAV,CAAeC,UADN;AAEvBb,EAAAA,iBAAiB,EAAET,SAAS,CAACuB,IAAV,CAAeD;AAFX,CAA3B;AAKAf,cAAc,CAACiB,YAAf,GAA8B,EAA9B;AAEAjB,cAAc,CAACkB,MAAf,GAAwB,EAAxB;AAEA,eAAelB,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Form, Input, Button,\n} from 'antd';\nimport {  LockOutlined } from '@ant-design/icons';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst UpdatePassword = ({ handleSubmit, isUpdatedPassword }) => {\n    const onFinish = (values) => {\n        handleSubmit(values)\n    };\n    return (\n        <>\n            {isUpdatedPassword && <Redirect to=\"/user\" /> && window.location.reload()}\n            <h2>Update Password</h2>\n            <Form\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"currentpassword\"\n                    rules={[{\n                        required: true,\n                        message: 'Please input your current Password!',\n                    }]}\n                >\n                    <Input.Password\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Current Password\"\n                    />\n                </Form.Item>\n                <Form.Item\n                    name=\"newpassword\"\n                    rules={[{\n                        required: true,\n                        message: 'Please input your new Password!',\n                    }]}\n                >\n                    <Input.Password\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"New Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n\n                    <Link to=\"/user/forgot-password\" href=\"/user/forgot-password\" style={{ float: 'right' }}>\n                        Forgot password\n                    </Link>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        style={{ width: '100%' }}\n                    >\n                        Update Password\n                    </Button>\n                </Form.Item>\n                <Button\n                    type=\"secondary\"\n                    style={{ width: '100%', marginTop }}\n                >\n                    Cancel\n                </Button>\n            </Form>\n\n        </>\n    );\n};\n\nUpdatePassword.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    isUpdatedPassword: PropTypes.bool.isRequired,\n};\n\nUpdatePassword.defaultProps = {};\n\nUpdatePassword.styles = {};\n\nexport default UpdatePassword;\n"]},"metadata":{},"sourceType":"module"}