{"ast":null,"code":"import { connect } from 'react-redux';\nimport Dashboard from './view/Dashboard.view';\nimport { createEmployee, getAllEmployees, deleteEmployee, getSingleEmployee, UpdateSingleEmployee } from './dashboard.api';\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.getIn(['auth', 'isAuthenticated']),\n  employee: state.getIn(['dashboard', 'employee']),\n  isCreatingSuccess: state.getIn(['dashboard', 'isCreatingSuccess']),\n  loading: state.getIn(['dashboard', 'loading']),\n  isDeletingSuccess: state.getIn(['dashboard', 'isDeletingSuccess']),\n  singleEmployee: state.getIn(['dashboard', 'singleEmployee']),\n  isUpdated: state.getIn(['dashboard', 'isUpdated'])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createEmployee: (payload, test) => {\n    dispatch(createEmployee(payload, test));\n  },\n  getAllEmployees: () => {\n    dispatch(getAllEmployees());\n  },\n  deleteEmployee: id => {\n    dispatch(deleteEmployee(id));\n  },\n  getSingleEmployee: id => {\n    dispatch(getSingleEmployee(id));\n  },\n  updateSingleEmployee: (id, payload) => {\n    dispatch(UpdateSingleEmployee(id, payload));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/Dashboard.container.js"],"names":["connect","Dashboard","createEmployee","getAllEmployees","deleteEmployee","getSingleEmployee","UpdateSingleEmployee","mapStateToProps","state","isAuthenticated","getIn","employee","isCreatingSuccess","loading","isDeletingSuccess","singleEmployee","isUpdated","mapDispatchToProps","dispatch","payload","test","id","updateSingleEmployee"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,cAA1C,EAA0DC,iBAA1D,EAA6EC,oBAA7E,QAAyG,iBAAzG;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,eAAe,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,MAAD,EAAS,iBAAT,CAAZ,CADe;AAEhCC,EAAAA,QAAQ,EAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,EAAc,UAAd,CAAZ,CAFsB;AAGhCE,EAAAA,iBAAiB,EAAEJ,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,EAAc,mBAAd,CAAZ,CAHa;AAIhCG,EAAAA,OAAO,EAAEL,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,EAAc,SAAd,CAAZ,CAJuB;AAKhCI,EAAAA,iBAAiB,EAAEN,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,EAAc,mBAAd,CAAZ,CALa;AAMhCK,EAAAA,cAAc,EAAEP,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,EAAc,gBAAd,CAAZ,CANgB;AAOhCM,EAAAA,SAAS,EAAER,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,EAAc,WAAd,CAAZ;AAPqB,CAAZ,CAAxB;;AAUA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,cAAc,EAAE,CAACiB,OAAD,EAAWC,IAAX,KAAoB;AAClCF,IAAAA,QAAQ,CAAChB,cAAc,CAACiB,OAAD,EAAUC,IAAV,CAAf,CAAR;AACD,GAHuC;AAIvCjB,EAAAA,eAAe,EAAE,MAAM;AACtBe,IAAAA,QAAQ,CAACf,eAAe,EAAhB,CAAR;AACA,GANsC;AAOtCC,EAAAA,cAAc,EAAGiB,EAAD,IAAQ;AACtBH,IAAAA,QAAQ,CAACd,cAAc,CAACiB,EAAD,CAAf,CAAR;AACD,GATqC;AAUtChB,EAAAA,iBAAiB,EAAGgB,EAAD,IAAQ;AACzBH,IAAAA,QAAQ,CAACb,iBAAiB,CAACgB,EAAD,CAAlB,CAAR;AACD,GAZqC;AAatCC,EAAAA,oBAAoB,EAAE,CAACD,EAAD,EAAKF,OAAL,KAAiB;AACrCD,IAAAA,QAAQ,CAACZ,oBAAoB,CAACe,EAAD,EAAKF,OAAL,CAArB,CAAR;AACD;AAfqC,CAAf,CAA3B;;AAkBA,eAAenB,OAAO,CAACO,eAAD,EAAkBU,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\n\nimport Dashboard from './view/Dashboard.view';\nimport { createEmployee, getAllEmployees, deleteEmployee, getSingleEmployee, UpdateSingleEmployee } from './dashboard.api'\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.getIn(['auth', 'isAuthenticated']),\n    employee: state.getIn(['dashboard', 'employee']),\n    isCreatingSuccess: state.getIn(['dashboard', 'isCreatingSuccess']),\n    loading: state.getIn(['dashboard', 'loading']),\n    isDeletingSuccess: state.getIn(['dashboard', 'isDeletingSuccess']),\n    singleEmployee: state.getIn(['dashboard', 'singleEmployee']),\n    isUpdated: state.getIn(['dashboard', 'isUpdated']),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createEmployee: (payload , test) => {\n    dispatch(createEmployee(payload, test));\n  },\n   getAllEmployees: () => {\n    dispatch(getAllEmployees())\n   },\n    deleteEmployee: (id) => {\n      dispatch(deleteEmployee(id))\n    },\n    getSingleEmployee: (id) => {\n      dispatch(getSingleEmployee(id))\n    },\n    updateSingleEmployee: (id, payload) => {\n      dispatch(UpdateSingleEmployee(id, payload))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}