{"ast":null,"code":"import request from '../../common/request';\nimport { HTTP_STATUS } from '../../common/constants';\nimport { openNotification } from '../../components/Notification';\nimport { requestEmployeeCreation, EmployeeCreationSuccess, EmployeeCreationFailure, requestFetchingEmployees, EmployeeFetchingSuccess, EmployeeFetchingFailure, requestEmployeeDeletion, EmployeeDeletionSuccess, EmployeeDeletionFailure, requestSingleEmployee, SingleEmployeeSuccess, SingleEmployeeFailure, requestUpdateEmployee, EmployeeUpdateSuccess, EmployeeUpdateFailure } from './dashboard.actions';\nexport const createEmployee = payload => {\n  return async dispatch => {\n    dispatch(requestEmployeeCreation());\n\n    try {\n      const res = await request.post('/v1/employee/create', payload);\n      dispatch(EmployeeCreationSuccess());\n\n      if (res.status === HTTP_STATUS.CREATED) {\n        openNotification({\n          type: 'success',\n          title: 'Employee Created',\n          description: 'Employee Successfully Registered'\n        });\n      }\n\n      return res;\n    } catch (err) {\n      dispatch(EmployeeCreationFailure());\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};\nexport const getAllEmployees = () => {\n  return async dispatch => {\n    dispatch(requestFetchingEmployees());\n\n    try {\n      const res = await request.get('/v1/employee/');\n      dispatch(EmployeeFetchingSuccess(res.data || {}));\n      return res;\n    } catch (err) {\n      dispatch(EmployeeFetchingFailure(err));\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};\nexport const deleteEmployee = id => {\n  return async dispatch => {\n    dispatch(requestEmployeeDeletion());\n\n    try {\n      const res = await request.delete(`/v1/employee/${id}`);\n      dispatch(EmployeeDeletionSuccess());\n\n      if (res.status === 200) {\n        openNotification({\n          type: 'success',\n          title: 'Employee Deleted',\n          description: 'Employee Successfully Deleted'\n        });\n      }\n\n      return res;\n    } catch (err) {\n      dispatch(EmployeeDeletionFailure);\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};\nexport const getSingleEmployee = id => {\n  return async dispatch => {\n    dispatch(requestSingleEmployee());\n\n    try {\n      const res = await request.get(`/v1/employee/${id}`);\n      dispatch(SingleEmployeeSuccess(res.data || {}));\n      return res;\n    } catch (err) {\n      dispatch(SingleEmployeeFailure(err));\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};\nexport const UpdateSingleEmployee = (id, payload) => {\n  return async dispatch => {\n    dispatch(requestUpdateEmployee());\n\n    try {\n      const res = await request.put(`/v1/employee/${id}`, payload);\n      dispatch(EmployeeUpdateSuccess());\n      return res;\n    } catch (err) {\n      dispatch(EmployeeUpdateFailure());\n\n      if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Invalid Login credentials!'\n        });\n      } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n        openNotification({\n          type: 'error',\n          title: 'Not Found',\n          description: 'Resource Not Found!'\n        });\n      } else {\n        openNotification({\n          type: 'error',\n          title: 'User Login',\n          description: 'Some thing went wrong while making the request'\n        });\n      }\n\n      return null;\n    }\n  };\n};","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/dashboard.api.js"],"names":["request","HTTP_STATUS","openNotification","requestEmployeeCreation","EmployeeCreationSuccess","EmployeeCreationFailure","requestFetchingEmployees","EmployeeFetchingSuccess","EmployeeFetchingFailure","requestEmployeeDeletion","EmployeeDeletionSuccess","EmployeeDeletionFailure","requestSingleEmployee","SingleEmployeeSuccess","SingleEmployeeFailure","requestUpdateEmployee","EmployeeUpdateSuccess","EmployeeUpdateFailure","createEmployee","payload","dispatch","res","post","status","CREATED","type","title","description","err","response","UNAUTHORIZED","getAllEmployees","get","data","NOT_FOUND","deleteEmployee","id","delete","getSingleEmployee","UpdateSingleEmployee","put"],"mappings":"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","sourcesContent":["import request from '../../common/request';\nimport { HTTP_STATUS } from '../../common/constants';\nimport { openNotification } from '../../components/Notification';\n\nimport {\n    requestEmployeeCreation,\n    EmployeeCreationSuccess,\n    EmployeeCreationFailure,\n\n    requestFetchingEmployees,\n    EmployeeFetchingSuccess,\n    EmployeeFetchingFailure,\n\n    requestEmployeeDeletion,\n    EmployeeDeletionSuccess,\n    EmployeeDeletionFailure,\n\n    requestSingleEmployee,\n    SingleEmployeeSuccess,\n    SingleEmployeeFailure,\n\n    requestUpdateEmployee,\n    EmployeeUpdateSuccess,\n    EmployeeUpdateFailure,\n\n} from './dashboard.actions'\n\n\nexport const createEmployee = (payload) => {\n    return async (dispatch) => {\n        dispatch(requestEmployeeCreation());\n\n        try {\n            const res = await request.post('/v1/employee/create', payload);\n            dispatch(EmployeeCreationSuccess());\n            if (res.status === HTTP_STATUS.CREATED){\n                openNotification({\n                    type: 'success',\n                    title: 'Employee Created',\n                    description: 'Employee Successfully Registered',\n                });\n            }\n            return res;\n        } catch (err) {\n            dispatch(EmployeeCreationFailure());\n            if (err.response.status === HTTP_STATUS.UNAUTHORIZED) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    };\n};\n\nexport const getAllEmployees = () => {\n    return async (dispatch) => {\n        dispatch(requestFetchingEmployees());\n        try {\n            const res = await request.get('/v1/employee/');\n            dispatch(EmployeeFetchingSuccess(res.data || {}));\n            return res;\n        } catch (err) {\n            dispatch(EmployeeFetchingFailure(err));\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n\n\nexport const deleteEmployee = (id) => {\n    return async (dispatch) => {\n        dispatch(requestEmployeeDeletion());\n        try {\n            const res = await request.delete(`/v1/employee/${id}`);\n            dispatch(EmployeeDeletionSuccess());\n            if (res.status === 200){\n                openNotification({\n                    type: 'success',\n                    title: 'Employee Deleted',\n                    description: 'Employee Successfully Deleted',\n                });\n            }\n            return res;\n        } catch (err) {\n            dispatch(EmployeeDeletionFailure);\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n\nexport const getSingleEmployee = (id) => {\n    return async (dispatch) => {\n        dispatch(requestSingleEmployee());\n        try {\n            const res = await request.get(`/v1/employee/${id}`);\n            dispatch(SingleEmployeeSuccess(res.data || {}));\n            return res;\n        } catch (err) {\n            dispatch(SingleEmployeeFailure(err));\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n\nexport const UpdateSingleEmployee = (id, payload) => {\n    return async (dispatch) => {\n        dispatch(requestUpdateEmployee());\n        try {\n            const res = await request.put(`/v1/employee/${id}`, payload);\n            dispatch(EmployeeUpdateSuccess());\n            return res;\n        } catch (err) {\n            dispatch(EmployeeUpdateFailure());\n            if (err.response.status ===  HTTP_STATUS.UNAUTHORIZED ) {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Invalid Login credentials!',\n                });\n            } else if (err.response.status === HTTP_STATUS.NOT_FOUND) {\n                openNotification({\n                    type: 'error',\n                    title: 'Not Found',\n                    description: 'Resource Not Found!',\n                });\n            } else {\n                openNotification({\n                    type: 'error',\n                    title: 'User Login',\n                    description: 'Some thing went wrong while making the request',\n                });\n            }\n            return null;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}