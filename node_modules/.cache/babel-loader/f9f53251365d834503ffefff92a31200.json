{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/auth/views/EmailVerification.js\";\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Result, Spin } from 'antd';\n\nconst EmailVerification = ({\n  match,\n  verifyUserEmail,\n  isEmailVerified\n}) => {\n  const [fireRedirect, handleFireRedirect] = useState(false);\n  const [route, handleRoute] = useState('');\n  useEffect(() => {\n    if (isEmailVerified) {\n      handleRoute('/user/login');\n    }\n  }, [isEmailVerified]);\n  useEffect(() => {\n    if (match && match.params && match.params.token) {\n      verifyUserEmail(match.params.token);\n    }\n  }, [match, verifyUserEmail]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    key: \"redirect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, fireRedirect && [React.createElement(\"div\", {\n    key: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, handleFireRedirect(false)), React.createElement(Redirect, {\n    key: 2,\n    to: route,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })]), isEmailVerified === 'EMAIL_VERIFYING' && React.createElement(Spin, {\n    text: \"Verifying Email address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), isEmailVerified === 'EMAIL_VERIFIED' && React.createElement(Result, {\n    status: \"success\",\n    title: \"Welcome!\",\n    subTitle: \"Thanks for signing up! We just send you an email to verify and complete your registration.\",\n    extra: [React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/user/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Login\"))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), isEmailVerified === 'EMAIL_VERIFICATION_CONFLICT' && React.createElement(Result, {\n    status: \"error\",\n    subTitle: \"Your email is already registered, please click on login button.\",\n    extra: [React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/user/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Login\"))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nEmailVerification.propTypes = {\n  match: PropTypes.object.isRequired,\n  verifyUserEmail: PropTypes.func.isRequired,\n  isEmailVerified: PropTypes.string.isRequired\n};\nexport default withRouter(EmailVerification);","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/auth/views/EmailVerification.js"],"names":["Link","Redirect","withRouter","React","useEffect","useState","PropTypes","Button","Result","Spin","EmailVerification","match","verifyUserEmail","isEmailVerified","fireRedirect","handleFireRedirect","route","handleRoute","params","token","width","propTypes","object","isRequired","func","string"],"mappings":"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","sourcesContent":["import { Link, Redirect, withRouter } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Result, Spin } from 'antd';\n\nconst EmailVerification = ({ match, verifyUserEmail, isEmailVerified }) => {\n  const [fireRedirect, handleFireRedirect] = useState(false);\n  const [route, handleRoute] = useState('');\n\n  useEffect(() => {\n    if (isEmailVerified) {\n      handleRoute('/user/login');\n    }\n  }, [isEmailVerified]);\n\n  useEffect(() => {\n    if (match && match.params && match.params.token) {\n      verifyUserEmail(match.params.token);\n    }\n  }, [match, verifyUserEmail]);\n\n  return (\n    <>\n      <div key=\"redirect\">\n        {fireRedirect && [\n          <div key={1}>{handleFireRedirect(false)}</div>,\n          <Redirect key={2} to={route} />,\n        ]}\n      </div>\n\n      {isEmailVerified === 'EMAIL_VERIFYING' && <Spin text=\"Verifying Email address\" />}\n\n      {isEmailVerified === 'EMAIL_VERIFIED' && (\n        <Result\n          status=\"success\"\n          title=\"Welcome!\"\n          subTitle=\"Thanks for signing up! We just send you an email to verify and complete your registration.\"\n          extra={[\n            <Button type=\"primary\" style={{ width: '100%' }}>\n              <Link to=\"/user/login\">Login</Link>\n            </Button>,\n          ]}\n        />\n      )}\n\n      {isEmailVerified === 'EMAIL_VERIFICATION_CONFLICT' && (\n        <Result\n          status=\"error\"\n          subTitle=\"Your email is already registered, please click on login button.\"\n          extra={[\n            <Button type=\"primary\" style={{ width: '100%' }}>\n              <Link to=\"/user/login\">Login</Link>\n            </Button>,\n          ]}\n        />\n      )}\n    </>\n  );\n};\n\n\nEmailVerification.propTypes = {\n  match: PropTypes.object.isRequired,\n  verifyUserEmail: PropTypes.func.isRequired,\n  isEmailVerified: PropTypes.string.isRequired,\n};\nexport default withRouter(EmailVerification);\n"]},"metadata":{},"sourceType":"module"}