{"ast":null,"code":"import { connect } from 'react-redux';\nimport Dashboard from './view/Dashboard.view';\nimport { createEmployee, getAllEmployees } from './dashboard.api';\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.getIn(['auth', 'isAuthenticated']),\n  employee: state.getIn(['employee', 'employee']),\n  isCreatingSuccess: state.getIn(['employee', 'isCreatingSuccess']),\n  loading: state.getIn(['employee', 'loading'])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createEmployee: payload => {\n    dispatch(createEmployee(payload));\n  },\n  getAllEmployees: () => {\n    dispatch(getAllEmployees());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/Dashboard.container.js"],"names":["connect","Dashboard","createEmployee","getAllEmployees","mapStateToProps","state","isAuthenticated","getIn","employee","isCreatingSuccess","loading","mapDispatchToProps","dispatch","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,iBAAhD;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,eAAe,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,MAAD,EAAS,iBAAT,CAAZ,CADiB;AAEhCC,EAAAA,QAAQ,EAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,UAAD,EAAa,UAAb,CAAZ,CAFsB;AAGhCE,EAAAA,iBAAiB,EAAEJ,KAAK,CAACE,KAAN,CAAY,CAAC,UAAD,EAAa,mBAAb,CAAZ,CAHa;AAIlCG,EAAAA,OAAO,EAAEL,KAAK,CAACE,KAAN,CAAY,CAAC,UAAD,EAAa,SAAb,CAAZ;AAJyB,CAAZ,CAAxB;;AAOA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,cAAc,EAAGW,OAAD,IAAa;AAC3BD,IAAAA,QAAQ,CAACV,cAAc,CAACW,OAAD,CAAf,CAAR;AACD,GAHuC;AAIvCV,EAAAA,eAAe,EAAE,MAAM;AACtBS,IAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR;AACA;AANsC,CAAf,CAA3B;;AASA,eAAeH,OAAO,CAACI,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CV,SAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\n\nimport Dashboard from './view/Dashboard.view';\nimport { createEmployee, getAllEmployees } from './dashboard.api'\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.getIn(['auth', 'isAuthenticated']),\n    employee: state.getIn(['employee', 'employee']),\n    isCreatingSuccess: state.getIn(['employee', 'isCreatingSuccess']),\n  loading: state.getIn(['employee', 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createEmployee: (payload) => {\n    dispatch(createEmployee(payload));\n  },\n   getAllEmployees: () => {\n    dispatch(getAllEmployees())\n   }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}