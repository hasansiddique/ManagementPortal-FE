{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/Create.Employee.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { UserAddOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button, Select } from \"antd\";\nconst {\n  Content\n} = Layout;\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 7\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst validateMessages = {\n  types: {\n    email: 'please add a valid email!',\n    number: 'please add a number!'\n  },\n  number: {\n    range: 'age must be between 21 and 99'\n  }\n};\n\nconst CreateEmployee = ({\n  handleSubmit,\n  handleFetching,\n  employeeState,\n  loading,\n  Success\n}) => {\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const test1 = false;\n  useEffect(() => {\n    handleFetching();\n  }, [handleFetching, Success]);\n  console.log('employeeState : ', employeeState);\n  console.log('employeeState.employee : ', employeeState.employee);\n  console.log('Success : ', Success);\n  console.log('loading : ', loading);\n  const [form] = Form.useForm();\n  const {\n    validateFields,\n    resetFields\n  } = form;\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    validateFields().then(values => {\n      resetFields();\n      onFinish(values);\n    }).then(() => {\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setConfirmLoading(false);\n      }, 1000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleCancel = () => {\n    resetFields();\n    setVisible(false);\n  };\n\n  const onFinish = values => {\n    console.log('data is here', values);\n    handleSubmit(values);\n  };\n\n  const columns = [{\n    title: \"Sr.\",\n    dataIndex: \"Id\",\n    key: \"Id\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"Country\",\n    key: \"Name\"\n  }, {\n    title: \"Gender\",\n    dataIndex: \"Cases\",\n    key: \"Gender\"\n  }, {\n    title: \"Email\",\n    dataIndex: \"Active\",\n    key: \"Email\"\n  }, {\n    title: \"Designation\",\n    dataIndex: \"Death\",\n    key: \"Designation\"\n  }, {\n    title: \"Actions\",\n    dataIndex: \"Critical\",\n    key: \"Actions\"\n  }];\n  return React.createElement(Content, {\n    style: {\n      margin: \"0 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"site-layout-background\",\n    style: {\n      padding: 24,\n      minHeight: 360,\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(UserAddOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), \"Add Employee\"), React.createElement(Modal, {\n    title: \"Employee Registration Form\",\n    visible: visible,\n    onOk: handleOk,\n    okText: \"Register\",\n    confirmLoading: confirmLoading,\n    onCancel: handleCancel,\n    maskClosable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    form: form,\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: 'name',\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'email',\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'age',\n    label: \"Age\",\n    rules: [{\n      type: 'number',\n      required: true,\n      min: 21,\n      max: 99\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: \"gender\",\n    label: \"Gender\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Select a gender\",\n    allowClear: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Option, {\n    value: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"male\"), React.createElement(Option, {\n    value: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"female\"), React.createElement(Option, {\n    value: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"other\"))), React.createElement(Form.Item, {\n    name: 'designation',\n    label: \"Designation\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your designation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'department',\n    label: \"Department\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Please enter your department\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'address',\n    label: \"Address\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    placeholder: \"Please add address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })))))), React.createElement(Col, {\n    span: 12,\n    style: {\n      paddingLeft: 180\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Search By\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"search by name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })))), test1 ? React.createElement(Spin, {\n    size: \"large\",\n    style: {\n      paddingTop: 100,\n      width: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }) : React.createElement(Table, {\n    columns: columns,\n    dataSource: test,\n    pagination: {\n      pageSize: 10\n    },\n    scroll: {\n      y: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })));\n};\n\nCreateEmployee.defaultProps = {};\nCreateEmployee.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleFetching: PropTypes.func.isRequired,\n  employeeState: PropTypes.object,\n  loading: PropTypes.bool,\n  Success: PropTypes.bool\n};\nCreateEmployee.styles = {};\nexport default CreateEmployee;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/Create.Employee.js"],"names":["React","useState","useEffect","PropTypes","UserAddOutlined","Layout","Form","Row","Col","Input","Spin","InputNumber","Table","Modal","Button","Select","Content","Option","layout","labelCol","span","wrapperCol","validateMessages","types","email","number","range","CreateEmployee","handleSubmit","handleFetching","employeeState","loading","Success","visible","setVisible","confirmLoading","setConfirmLoading","test1","console","log","employee","form","useForm","validateFields","resetFields","showModal","handleOk","then","values","onFinish","setTimeout","catch","err","handleCancel","columns","title","dataIndex","key","margin","padding","minHeight","required","type","min","max","paddingLeft","paddingTop","width","test","pageSize","y","defaultProps","propTypes","func","isRequired","object","bool","styles"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserAddOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button, Select  } from \"antd\";\nconst { Content } = Layout;\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: {\n        span: 7,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\nconst validateMessages = {\n    types: {\n        email: 'please add a valid email!',\n        number: 'please add a number!',\n    },\n    number: {\n        range: 'age must be between 21 and 99',\n    },\n};\n\nconst CreateEmployee = ({ handleSubmit, handleFetching, employeeState, loading, Success }) => {\n    const [visible, setVisible] = useState(false)\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const test1 = false;\n\n    useEffect(() => {\n        handleFetching();\n    },[handleFetching, Success])\n\n    console.log('employeeState : ', employeeState);\n    console.log('employeeState.employee : ', employeeState.employee);\n    console.log('Success : ', Success);\n    console.log('loading : ', loading);\n\n    const [form] = Form.useForm();\n    const { validateFields, resetFields } = form;\n\n    const showModal = () => {\n        setVisible(true)\n    };\n\n    const handleOk = () => {\n        validateFields()\n            .then(values => {\n                resetFields();\n                onFinish(values);\n            })\n            .then(() => { setConfirmLoading(true)\n                setTimeout(() => {\n                    setVisible(false)\n                    setConfirmLoading(false)\n                }, 1000)})\n            .catch(err => {\n            console.log(err);\n        });\n\n    };\n\n    const handleCancel = () => {\n        resetFields();\n        setVisible(false)\n    };\n\n    const onFinish = values => {\n        console.log('data is here', values);\n        handleSubmit(values);\n    };\n\n    \n\n    const columns = [\n        {\n            title: \"Sr.\",\n            dataIndex: \"Id\",\n            key: \"Id\"\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"Country\",\n            key: \"Name\"\n        },\n        {\n            title: \"Gender\",\n            dataIndex: \"Cases\",\n            key: \"Gender\"\n        },\n        {\n            title: \"Email\",\n            dataIndex: \"Active\",\n            key: \"Email\"\n        },\n        {\n            title: \"Designation\",\n            dataIndex: \"Death\",\n            key: \"Designation\"\n        },\n        {\n            title: \"Actions\",\n            dataIndex: \"Critical\",\n            key: \"Actions\"\n        },\n\n    ];\n\nreturn (\n    <Content style={{ margin: \"0 16px\" }}>\n        <div\n            className=\"site-layout-background\"\n            style={{\n                padding: 24,\n                minHeight: 360,\n                margin: \"16px 0\"\n            }}\n        >\n            <Row>\n                <Col span={7}>\n                    <div>\n                        <Button type=\"primary\" onClick={showModal}>\n                            <UserAddOutlined />\n                            Add Employee\n                        </Button>\n                        <Modal\n                            title=\"Employee Registration Form\"\n                            visible={visible}\n                            onOk={handleOk}\n                            okText=\"Register\"\n                            confirmLoading={confirmLoading}\n                            onCancel={handleCancel}\n                            maskClosable={false}\n                        >\n                                <Form {...layout} form={form} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                                    <Form.Item\n                                        name={'name'}\n                                        label=\"Name\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input placeholder='Please Input' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'email'}\n                                        label=\"Email\"\n                                        rules={[\n                                            {\n                                                type: 'email',\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input placeholder='Please enter your email' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'age'}\n                                        label=\"Age\"\n                                        rules={[\n                                            {\n                                                type: 'number',\n                                                required: true,\n                                                min: 21,\n                                                max: 99,\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name=\"gender\"\n                                        label=\"Gender\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Select\n                                            placeholder=\"Select a gender\"\n                                            allowClear\n                                        >\n                                            <Option value=\"male\">male</Option>\n                                            <Option value=\"female\">female</Option>\n                                            <Option value=\"other\">other</Option>\n                                        </Select>\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'designation'}\n                                        label=\"Designation\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input  placeholder='Please enter your designation' />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'department'}\n                                        label=\"Department\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input  placeholder='Please enter your department' />\n                                    </Form.Item>\n                                    <Form.Item name={'address'} label=\"Address\"   rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}>\n                                        <Input.TextArea placeholder='Please add address' />\n                                    </Form.Item>\n                                </Form>\n                        </Modal>\n                    </div>\n                </Col>\n                <Col span={12} style={{ paddingLeft: 180 }}>\n                    <Form.Item label=\"Search By\">\n                        <Input placeholder=\"search by name\"/>\n                    </Form.Item>\n                </Col>\n            </Row>\n            {test1 ? (\n                <Spin size=\"large\" style={{ paddingTop: 100, width: 900 }} />\n            ) : (\n                <Table\n                    columns={columns}\n                    dataSource={test}\n                    pagination={{ pageSize: 10 }}\n                    scroll={{ y: 240 }}\n                />\n            )}\n        </div>\n    </Content>\n);\n}\n\nCreateEmployee.defaultProps ={};\n\nCreateEmployee.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleFetching: PropTypes.func.isRequired,\n    employeeState: PropTypes.object,\n    loading: PropTypes.bool,\n    Success: PropTypes.bool,\n};\n\nCreateEmployee.styles = {};\n\nexport default CreateEmployee;\n"]},"metadata":{},"sourceType":"module"}