{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/auth/AuthRoutes.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Login from './views/Login';\nimport LogOut from './views/Logout';\nimport Register from './views/Register';\nimport ResendEmail from './views/ResendEmail';\nimport ForgotPassword from './views/ForgotPassword';\nimport EmailVerification from './views/EmailVerification';\nimport UpdatePassword from './views/UpdatePassword';\n\nconst AuthRoutes = ({\n  match,\n  loginUser,\n  logOutUser,\n  isLoggingIn,\n  isLoggedOut,\n  registerUser,\n  isLoggingOut,\n  isRegistering,\n  verifyUserEmail,\n  isEmailVerified,\n  isRegisterSuccess,\n  userPasswordReset,\n  resendEmailVerification,\n  userPasswordUpdate,\n  isUpdatedPassword\n}) => {\n  return [React.createElement(Route, {\n    key: \"login\",\n    exact: true,\n    path: ['/', '/user', '/user/login'],\n    render: () => {\n      return React.createElement(Login, {\n        handleSubmit: loginUser,\n        isLoggingIn: isLoggingIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    key: \"register\",\n    exact: true,\n    path: \"/user/register\",\n    render: () => {\n      return React.createElement(Register, {\n        handleSubmit: registerUser,\n        isRegistering: isRegistering,\n        isRegisterSuccess: isRegisterSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Route, {\n    key: \"logout\",\n    exact: true,\n    path: \"/user/logout\",\n    render: () => {\n      return React.createElement(LogOut, {\n        logOutUser: logOutUser,\n        isLoggingOut: isLoggingOut,\n        isLoggedOut: isLoggedOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    key: \"emailVerification\",\n    exact: true,\n    path: \"/user/verify/:token\",\n    render: () => {\n      return React.createElement(EmailVerification, {\n        match: match,\n        verifyUserEmail: verifyUserEmail,\n        isEmailVerified: isEmailVerified,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Route, {\n    key: \"forgotPassword\",\n    exact: true,\n    path: \"/user/forgot-password\",\n    render: () => {\n      return React.createElement(ForgotPassword, {\n        isLoggingIn: isLoggingIn,\n        handleSubmit: userPasswordReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Route, {\n    key: \"resendEmail\",\n    exact: true,\n    path: \"/user/resend-email\",\n    render: () => {\n      return React.createElement(ResendEmail, {\n        handleSubmit: resendEmailVerification,\n        isLoggingIn: isLoggingIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Route, {\n    key: \"UpdatePassword\",\n    exact: true,\n    path: \"/user/update-password\",\n    render: () => {\n      return React.createElement(UpdatePassword, {\n        handleSubmit: userPasswordUpdate,\n        isUpdatedPassword: isUpdatedPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })];\n};\n\nAuthRoutes.propTypes = {\n  match: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  logOutUser: PropTypes.func.isRequired,\n  isLoggedOut: PropTypes.bool.isRequired,\n  isLoggingIn: PropTypes.bool.isRequired,\n  isLoggingOut: PropTypes.bool.isRequired,\n  registerUser: PropTypes.func.isRequired,\n  isRegistering: PropTypes.bool.isRequired,\n  isUpdatedPassword: PropTypes.bool.isRequired,\n  isEmailVerified: PropTypes.string.isRequired,\n  verifyUserEmail: PropTypes.func.isRequired,\n  isRegisterSuccess: PropTypes.bool.isRequired,\n  userPasswordReset: PropTypes.func.isRequired,\n  resendEmailVerification: PropTypes.func.isRequired,\n  userPasswordUpdate: PropTypes.func.isRequired\n};\nexport default AuthRoutes;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/auth/AuthRoutes.js"],"names":["React","Route","PropTypes","Login","LogOut","Register","ResendEmail","ForgotPassword","EmailVerification","UpdatePassword","AuthRoutes","match","loginUser","logOutUser","isLoggingIn","isLoggedOut","registerUser","isLoggingOut","isRegistering","verifyUserEmail","isEmailVerified","isRegisterSuccess","userPasswordReset","resendEmailVerification","userPasswordUpdate","isUpdatedPassword","propTypes","object","isRequired","func","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Login from './views/Login';\nimport LogOut from './views/Logout';\nimport Register from './views/Register';\nimport ResendEmail from './views/ResendEmail';\nimport ForgotPassword from './views/ForgotPassword';\nimport EmailVerification from './views/EmailVerification';\nimport UpdatePassword from './views/UpdatePassword';\n\nconst AuthRoutes = ({\n  match,\n  loginUser,\n  logOutUser,\n  isLoggingIn,\n  isLoggedOut,\n  registerUser,\n  isLoggingOut,\n  isRegistering,\n  verifyUserEmail,\n  isEmailVerified,\n  isRegisterSuccess,\n  userPasswordReset,\n  resendEmailVerification,\n   userPasswordUpdate,\n   isUpdatedPassword,\n}) => {\n  return ([\n    <Route\n      key=\"login\"\n      exact\n      path={['/', '/user', '/user/login']}\n      render={() => {\n        return (\n          <Login\n            handleSubmit={loginUser}\n            isLoggingIn={isLoggingIn}\n          />\n        );\n      }}\n    />,\n    <Route\n      key=\"register\"\n      exact\n      path=\"/user/register\"\n      render={() => {\n        return (\n          <Register\n            handleSubmit={registerUser}\n            isRegistering={isRegistering}\n            isRegisterSuccess={isRegisterSuccess}\n          />\n        );\n      }}\n    />,\n    <Route\n      key=\"logout\"\n      exact\n      path=\"/user/logout\"\n      render={() => {\n        return (\n          <LogOut\n            logOutUser={logOutUser}\n            isLoggingOut={isLoggingOut}\n            isLoggedOut={isLoggedOut}\n          />\n        );\n      }}\n    />,\n    <Route\n      key=\"emailVerification\"\n      exact\n      path=\"/user/verify/:token\"\n      render={() => {\n        return (\n          <EmailVerification\n            match={match}\n            verifyUserEmail={verifyUserEmail}\n            isEmailVerified={isEmailVerified}\n          />\n        );\n      }}\n    />,\n    <Route\n      key=\"forgotPassword\"\n      exact\n      path=\"/user/forgot-password\"\n      render={() => {\n        return (\n          <ForgotPassword\n            isLoggingIn={isLoggingIn}\n            handleSubmit={userPasswordReset}\n          />\n        );\n      }}\n    />,\n    <Route\n      key=\"resendEmail\"\n      exact\n      path=\"/user/resend-email\"\n      render={() => {\n        return (\n          <ResendEmail\n            handleSubmit={resendEmailVerification}\n            isLoggingIn={isLoggingIn}\n          />\n        );\n      }}\n    />,\n    <Route\n        key=\"UpdatePassword\"\n        exact\n        path=\"/user/update-password\"\n        render={() => {\n          return (\n              <UpdatePassword\n                  handleSubmit={userPasswordUpdate}\n                  isUpdatedPassword={isUpdatedPassword}\n              />\n          );\n        }}\n    />,\n  ]);\n};\n\nAuthRoutes.propTypes = {\n  match: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  logOutUser: PropTypes.func.isRequired,\n  isLoggedOut: PropTypes.bool.isRequired,\n  isLoggingIn: PropTypes.bool.isRequired,\n  isLoggingOut: PropTypes.bool.isRequired,\n  registerUser: PropTypes.func.isRequired,\n  isRegistering: PropTypes.bool.isRequired,\n  isUpdatedPassword: PropTypes.bool.isRequired,\n  isEmailVerified: PropTypes.string.isRequired,\n  verifyUserEmail: PropTypes.func.isRequired,\n  isRegisterSuccess: PropTypes.bool.isRequired,\n  userPasswordReset: PropTypes.func.isRequired,\n  resendEmailVerification: PropTypes.func.isRequired,\n  userPasswordUpdate: PropTypes.func.isRequired,\n};\n\nexport default AuthRoutes;\n"]},"metadata":{},"sourceType":"module"}