{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/layout/Layout.view.js\";\nimport { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Fragment, useEffect } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport AppRoutes from '../../AppRoutes';\nimport { getUser, refreshToken } from '../auth/auth.api';\nimport storage from '../../common/storage';\nimport { AUTH_ROUTES, USER_STATE } from '../../common/constants';\n\nconst Layout = ({\n  history,\n  location,\n  getUserFromApi,\n  isAuthenticated,\n  refreshToken\n}) => {\n  useEffect(() => {\n    if (isAuthenticated && admin() && location && location.pathname) {\n      history.push(AUTH_ROUTES.includes(location.pathname) ? '/dashboard' : location.pathname);\n    } else if (isAuthenticated && employee() && location && location.pathname) {\n      history.push(AUTH_ROUTES.includes(location.pathname) ? '/employee' : '/employee');\n    } else if (!isAuthenticated && get(storage.get('user'), 'token')) {\n      getUserFromApi();\n    }\n\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 1000);\n    return () => clearInterval(interval); // eslint-disable-next-line\n  }, [getUserFromApi, isAuthenticated, history, refreshToken]);\n\n  const admin = () => get(storage.get('user'), 'user.typeOfId') === USER_STATE.ADMIN_FULL;\n\n  const employee = () => get(storage.get('user'), 'user.typeOfId') === USER_STATE.EMPLOYEE;\n\n  return [React.createElement(Fragment, {\n    key: \"redirect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, isAuthenticated && React.createElement(Redirect, {\n    to: AUTH_ROUTES.includes(location.pathname) ? '/dashboard' : location.pathname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    key: \"app\",\n    id: \"app-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AppRoutes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))];\n};\n\nLayout.defaultProps = {\n  isAuthenticated: false\n};\nLayout.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  getUser: PropTypes.func,\n  history: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.getIn(['auth', 'isAuthenticated'])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUserFromApi: () => {\n    dispatch(getUser());\n  },\n  refreshToken: () => {\n    dispatch(refreshToken());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Layout));","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/layout/Layout.view.js"],"names":["get","PropTypes","connect","React","Fragment","useEffect","withRouter","Redirect","AppRoutes","getUser","refreshToken","storage","AUTH_ROUTES","USER_STATE","Layout","history","location","getUserFromApi","isAuthenticated","admin","pathname","push","includes","employee","interval","setInterval","clearInterval","ADMIN_FULL","EMPLOYEE","defaultProps","propTypes","bool","func","object","isRequired","mapStateToProps","state","getIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Fragment, useEffect } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport AppRoutes from '../../AppRoutes';\nimport { getUser, refreshToken } from '../auth/auth.api';\nimport storage from '../../common/storage';\nimport { AUTH_ROUTES, USER_STATE } from '../../common/constants';\n\nconst Layout = ({\n  history,\n  location,\n  getUserFromApi,\n  isAuthenticated, refreshToken,\n}) => {\n  useEffect(() => {\n    if (isAuthenticated && admin() && location && location.pathname) {\n      history.push(\n        AUTH_ROUTES.includes(location.pathname)\n          ? '/dashboard'\n          : location.pathname,\n      );\n    } else if (isAuthenticated && employee() && location && location.pathname) {\n      history.push(\n          AUTH_ROUTES.includes(location.pathname)\n              ? '/employee'\n              : '/employee',\n      );\n    }else if (!isAuthenticated && get(storage.get('user'), 'token')) {\n      getUserFromApi()\n    }\n    const interval = setInterval(() => {\n      refreshToken()\n    }, 1000);\n    return () => clearInterval(interval);\n\n    // eslint-disable-next-line\n  },[getUserFromApi, isAuthenticated, history, refreshToken]);\n\n  const admin = () => get(storage.get('user'), 'user.typeOfId') === USER_STATE.ADMIN_FULL;\n  const employee =() => get(storage.get('user'), 'user.typeOfId') === USER_STATE.EMPLOYEE;\n\n  return [\n    <Fragment key=\"redirect\">\n      {isAuthenticated && (\n        <Redirect\n          to={\n            AUTH_ROUTES.includes(location.pathname)\n              ? '/dashboard'\n              : location.pathname\n          }\n        />\n      )}\n    </Fragment>,\n    <div key=\"app\" id=\"app-wrapper\">\n      <AppRoutes />\n    </div>,\n  ];\n};\n\nLayout.defaultProps = {\n  isAuthenticated: false,\n};\n\nLayout.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  getUser: PropTypes.func,\n  history: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.getIn(['auth', 'isAuthenticated']),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUserFromApi: () => {\n    dispatch(getUser());\n  },\n  refreshToken: () => {\n    dispatch(refreshToken());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Layout));\n"]},"metadata":{},"sourceType":"module"}