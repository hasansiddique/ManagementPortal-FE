{"ast":null,"code":"var _jsxFileName = \"/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/Create.Employee.js\";\nimport React, { useState } from 'react'; // import PropTypes from 'prop-types';\n\nimport { UserAddOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button } from \"antd\";\nconst {\n  Content\n} = Layout;\nconst layout = {\n  labelCol: {\n    span: 7\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst validateMessages = {\n  types: {\n    email: 'please add a valid email!',\n    number: 'please add a number!'\n  },\n  number: {\n    range: 'age must be between 0 and 99'\n  }\n};\n\nconst CreateEmployee = () => {\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const loading = false;\n  const [form] = Form.useForm();\n  const {\n    validateFields,\n    resetFields\n  } = form;\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    validateFields().then(values => {\n      resetFields();\n      onFinish(values);\n    }).then(() => {\n      setConfirmLoading(true);\n      setTimeout(() => {\n        setVisible(false);\n        setConfirmLoading(false);\n      }, 2000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleCancel = () => {\n    resetFields();\n    setVisible(false);\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    width: 150\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    width: 150\n  }, {\n    title: 'Address',\n    dataIndex: 'address'\n  }];\n  const data = [];\n\n  for (let i = 0; i < 100; i++) {\n    data.push({\n      key: i,\n      name: `Edward King ${i}`,\n      age: 32,\n      address: `London, Park Lane no. ${i}`\n    });\n  }\n\n  return React.createElement(Content, {\n    style: {\n      margin: \"0 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"site-layout-background\",\n    style: {\n      padding: 24,\n      minHeight: 360,\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(UserAddOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), \"Add Employee\"), React.createElement(Modal, {\n    title: \"Add Employee\",\n    visible: visible,\n    onOk: handleOk,\n    maskClosable: \"true\",\n    okText: \"Add\",\n    confirmLoading: confirmLoading,\n    onCancel: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    form: form,\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: 'name',\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'email',\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'age',\n    label: \"Age\",\n    rules: [{\n      type: 'number',\n      required: true,\n      min: 0,\n      max: 99\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'designation',\n    label: \"Designation\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'department',\n    label: \"Department\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: 'address',\n    label: \"Address\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })))))), React.createElement(Col, {\n    span: 12,\n    style: {\n      paddingLeft: 180\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    label: \"Search By\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"search by name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })))), loading ? React.createElement(Spin, {\n    size: \"large\",\n    style: {\n      paddingTop: 100,\n      width: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }) : React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: {\n      pageSize: 20\n    },\n    scroll: {\n      y: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })));\n};\n\nCreateEmployee.defaultProps = {};\nCreateEmployee.propTypes = {};\nCreateEmployee.styles = {};\nexport default CreateEmployee;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/views/dashboard/components/Create.Employee.js"],"names":["React","useState","UserAddOutlined","Layout","Form","Row","Col","Input","Spin","InputNumber","Table","Modal","Button","Content","layout","labelCol","span","wrapperCol","validateMessages","types","email","number","range","CreateEmployee","visible","setVisible","confirmLoading","setConfirmLoading","loading","form","useForm","validateFields","resetFields","showModal","handleOk","then","values","onFinish","setTimeout","catch","err","console","log","handleCancel","columns","title","dataIndex","width","data","i","push","key","name","age","address","margin","padding","minHeight","required","type","min","max","paddingLeft","paddingTop","pageSize","y","defaultProps","propTypes","styles"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8CC,WAA9C,EAA2DC,KAA3D,EAAkEC,KAAlE,EAAyEC,MAAzE,QAAwF,MAAxF;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcV,MAApB;AAEA,MAAMW,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE;AADA,GADC;AAIXC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE;AADE;AAJD,CAAf;AAQA,MAAME,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,2BADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GADc;AAKrBA,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AALa,CAAzB;;AAUA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACyB,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM2B,OAAO,GAAG,KAAhB;AAEA,QAAM,CAACC,IAAD,IAASzB,IAAI,CAAC0B,OAAL,EAAf;AACA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAkCH,IAAxC;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACpBR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIA,QAAMS,QAAQ,GAAG,MAAM;AACnBH,IAAAA,cAAc,GACTI,IADL,CACUC,MAAM,IAAI;AACZJ,MAAAA,WAAW;AACXK,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACH,KAJL,EAKKD,IALL,CAKU,MAAM;AAAER,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACVW,MAAAA,UAAU,CAAC,MAAM;AACbb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,OAHS,EAGP,IAHO,CAAV;AAGS,KATjB,EAUKY,KAVL,CAUWC,GAAG,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAZD;AAcH,GAfD;;AAiBA,QAAMG,YAAY,GAAG,MAAM;AACvBX,IAAAA,WAAW;AACXP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAHD;;AAKA,QAAMY,QAAQ,GAAGD,MAAM,IAAI;AACvBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,GAFD;;AAIA,QAAMQ,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,MAFf;AAGIC,IAAAA,KAAK,EAAE;AAHX,GADY,EAMZ;AACIF,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,SAAS,EAAE,KAFf;AAGIC,IAAAA,KAAK,EAAE;AAHX,GANY,EAWZ;AACIF,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE;AAFf,GAXY,CAAhB;AAiBA,QAAME,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,IAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,MAAAA,GAAG,EAAEF,CADC;AAENG,MAAAA,IAAI,EAAG,eAAcH,CAAE,EAFjB;AAGNI,MAAAA,GAAG,EAAE,EAHC;AAINC,MAAAA,OAAO,EAAG,yBAAwBL,CAAE;AAJ9B,KAAV;AAMH;;AACL,SACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,wBADd;AAEI,IAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAE,EADN;AAEHC,MAAAA,SAAS,EAAE,GAFR;AAGHF,MAAAA,MAAM,EAAE;AAHL,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEtB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,iBADJ,EAKI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,cADV;AAEI,IAAA,OAAO,EAAET,OAFb;AAGI,IAAA,IAAI,EAAEU,QAHV;AAII,IAAA,YAAY,EAAC,MAJjB;AAKI,IAAA,MAAM,EAAC,KALX;AAMI,IAAA,cAAc,EAAER,cANpB;AAOI,IAAA,QAAQ,EAAEiB,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASQ,oBAAC,IAAD,oBAAU7B,MAAV;AAAkB,IAAA,IAAI,EAAEe,IAAxB;AAA8B,IAAA,IAAI,EAAC,eAAnC;AAAmD,IAAA,QAAQ,EAAEQ,QAA7D;AAAuE,IAAA,gBAAgB,EAAEnB,gBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAE,MADV;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,KAAK,EAAE,CACH;AACIwC,MAAAA,QAAQ,EAAE;AADd,KADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ,EAYI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAE,OADV;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,KAAK,EAAE,CACH;AACIC,MAAAA,IAAI,EAAE,OADV;AAEID,MAAAA,QAAQ,EAAE;AAFd,KADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CAZJ,EAwBI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAE,KADV;AAEI,IAAA,KAAK,EAAC,KAFV;AAGI,IAAA,KAAK,EAAE,CACH;AACIC,MAAAA,IAAI,EAAE,QADV;AAEID,MAAAA,QAAQ,EAAE,IAFd;AAGIE,MAAAA,GAAG,EAAE,CAHT;AAIIC,MAAAA,GAAG,EAAE;AAJT,KADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAxBJ,EAsCI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAE,aADV;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,KAAK,EAAE,CACH;AACIH,MAAAA,QAAQ,EAAE;AADd,KADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAtCJ,EAiDI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAE,YADV;AAEI,IAAA,KAAK,EAAC,YAFV;AAGI,IAAA,KAAK,EAAE,CACH;AACIA,MAAAA,QAAQ,EAAE;AADd,KADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAjDJ,EA4DI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAE,SAAjB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,KAAK,EAAE,CAC/C;AACIA,MAAAA,QAAQ,EAAE;AADd,KAD+C,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CA5DJ,CATR,CALJ,CADJ,CADJ,EAuFI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,KAAK,EAAE;AAAEI,MAAAA,WAAW,EAAE;AAAf,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAvFJ,CARJ,EAqGKlC,OAAO,GACJ,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,KAAK,EAAE;AAAEmC,MAAAA,UAAU,EAAE,GAAd;AAAmBhB,MAAAA,KAAK,EAAE;AAA1B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAGJ,oBAAC,KAAD;AACI,IAAA,OAAO,EAAEH,OADb;AAEI,IAAA,UAAU,EAAEI,IAFhB;AAGI,IAAA,UAAU,EAAE;AAAEgB,MAAAA,QAAQ,EAAE;AAAZ,KAHhB;AAII,IAAA,MAAM,EAAE;AAAEC,MAAAA,CAAC,EAAE;AAAL,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxGR,CADJ,CADJ;AAoHC,CApLD;;AAsLA1C,cAAc,CAAC2C,YAAf,GAA6B,EAA7B;AAEA3C,cAAc,CAAC4C,SAAf,GAA2B,EAA3B;AAEA5C,cAAc,CAAC6C,MAAf,GAAwB,EAAxB;AAEA,eAAe7C,cAAf","sourcesContent":["import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n\nimport { UserAddOutlined } from '@ant-design/icons';\nimport { Layout, Form, Row, Col, Input, Spin, InputNumber, Table, Modal, Button  } from \"antd\";\nconst { Content } = Layout;\n\nconst layout = {\n    labelCol: {\n        span: 7,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\nconst validateMessages = {\n    types: {\n        email: 'please add a valid email!',\n        number: 'please add a number!',\n    },\n    number: {\n        range: 'age must be between 0 and 99',\n    },\n};\n\nconst CreateEmployee = () => {\n    const [visible, setVisible] = useState(false)\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const loading = false;\n\n    const [form] = Form.useForm();\n    const { validateFields, resetFields } = form;\n\n    const showModal = () => {\n        setVisible(true)\n    };\n\n    const handleOk = () => {\n        validateFields()\n            .then(values => {\n                resetFields();\n                onFinish(values);\n            })\n            .then(() => { setConfirmLoading(true)\n                setTimeout(() => {\n                    setVisible(false)\n                    setConfirmLoading(false)\n                }, 2000)})\n            .catch(err => {\n            console.log(err);\n        });\n\n    };\n\n    const handleCancel = () => {\n        resetFields();\n        setVisible(false)\n    };\n\n    const onFinish = values => {\n        console.log(values);\n    };\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            width: 150,\n        },\n        {\n            title: 'Age',\n            dataIndex: 'age',\n            width: 150,\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n        },\n    ];\n\n    const data = [];\n    for (let i = 0; i < 100; i++) {\n        data.push({\n            key: i,\n            name: `Edward King ${i}`,\n            age: 32,\n            address: `London, Park Lane no. ${i}`,\n        });\n    }\nreturn (\n    <Content style={{ margin: \"0 16px\" }}>\n        <div\n            className=\"site-layout-background\"\n            style={{\n                padding: 24,\n                minHeight: 360,\n                margin: \"16px 0\"\n            }}\n        >\n            <Row>\n                <Col span={7}>\n                    <div>\n                        <Button type=\"primary\" onClick={showModal}>\n                            <UserAddOutlined />\n                            Add Employee\n                        </Button>\n                        <Modal\n                            title=\"Add Employee\"\n                            visible={visible}\n                            onOk={handleOk}\n                            maskClosable=\"true\"\n                            okText=\"Add\"\n                            confirmLoading={confirmLoading}\n                            onCancel={handleCancel}\n                        >\n                                <Form {...layout} form={form} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                                    <Form.Item\n                                        name={'name'}\n                                        label=\"Name\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'email'}\n                                        label=\"Email\"\n                                        rules={[\n                                            {\n                                                type: 'email',\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'age'}\n                                        label=\"Age\"\n                                        rules={[\n                                            {\n                                                type: 'number',\n                                                required: true,\n                                                min: 0,\n                                                max: 99,\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'designation'}\n                                        label=\"Designation\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name={'department'}\n                                        label=\"Department\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item name={'address'} label=\"Address\" rules={[\n                                        {\n                                            required: true,\n                                        },\n                                    ]}>\n                                        <Input.TextArea />\n                                    </Form.Item>\n                                </Form>\n                        </Modal>\n                    </div>\n                </Col>\n                <Col span={12} style={{ paddingLeft: 180 }}>\n                    <Form.Item label=\"Search By\">\n                        <Input placeholder=\"search by name\"/>\n                    </Form.Item>\n                </Col>\n            </Row>\n            {loading ? (\n                <Spin size=\"large\" style={{ paddingTop: 100, width: 900 }} />\n            ) : (\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                    pagination={{ pageSize: 20 }}\n                    scroll={{ y: 240 }}\n                />\n            )}\n        </div>\n    </Content>\n);\n}\n\nCreateEmployee.defaultProps ={};\n\nCreateEmployee.propTypes = {};\n\nCreateEmployee.styles = {};\n\nexport default CreateEmployee;\n"]},"metadata":{},"sourceType":"module"}