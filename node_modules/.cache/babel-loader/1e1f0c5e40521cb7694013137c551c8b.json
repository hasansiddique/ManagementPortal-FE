{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.actionTransformer = actionTransformer;\nexports.logger = void 0;\n\nvar _batch = _interopRequireDefault(require(\"../batch\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar batchType = _batch[\"default\"].getType();\n\nfunction actionTransformer(action) {\n  if (action && action.type === batchType) {\n    action.payload.type = batchType;\n    return action.payload;\n  }\n\n  return action;\n}\n\nvar logger = {};\nexports.logger = logger;\n\nvar _loop = function _loop(level) {\n  if (typeof console[level] === 'function') {\n    logger[level] = function levelFn() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var lastArg = args.pop();\n\n      if (Array.isArray(lastArg) && lastArg.type === batchType) {\n        lastArg.forEach(function (action) {\n          console[level].apply(console, [].concat(args, [action]));\n        });\n      } else {\n        args.push(lastArg);\n        console[level].apply(console, args);\n      }\n    };\n  }\n};\n\nfor (var level in console) {\n  _loop(level);\n}","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/node_modules/redux-act/lib/loggers/reduxLogger.js"],"names":["Object","defineProperty","exports","value","actionTransformer","logger","_batch","_interopRequireDefault","require","obj","__esModule","batchType","getType","action","type","payload","_loop","level","console","levelFn","_len","arguments","length","args","Array","_key","lastArg","pop","isArray","forEach","apply","concat","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAAtB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAAnC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIE,SAAS,GAAGL,MAAM,CAAC,SAAD,CAAN,CAAkBM,OAAlB,EAAhB;;AAEA,SAASR,iBAAT,CAA2BS,MAA3B,EAAmC;AACjC,MAAIA,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgBH,SAA9B,EAAyC;AACvCE,IAAAA,MAAM,CAACE,OAAP,CAAeD,IAAf,GAAsBH,SAAtB;AACA,WAAOE,MAAM,CAACE,OAAd;AACD;;AAED,SAAOF,MAAP;AACD;;AAED,IAAIR,MAAM,GAAG,EAAb;AACAH,OAAO,CAACG,MAAR,GAAiBA,MAAjB;;AAEA,IAAIW,KAAK,GAAG,SAASA,KAAT,CAAeC,KAAf,EAAsB;AAChC,MAAI,OAAOC,OAAO,CAACD,KAAD,CAAd,KAA0B,UAA9B,EAA0C;AACxCZ,IAAAA,MAAM,CAACY,KAAD,CAAN,GAAgB,SAASE,OAAT,GAAmB;AACjC,WAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,QAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,UAAIC,OAAO,GAAGH,IAAI,CAACI,GAAL,EAAd;;AAEA,UAAIH,KAAK,CAACI,OAAN,CAAcF,OAAd,KAA0BA,OAAO,CAACZ,IAAR,KAAiBH,SAA/C,EAA0D;AACxDe,QAAAA,OAAO,CAACG,OAAR,CAAgB,UAAUhB,MAAV,EAAkB;AAChCK,UAAAA,OAAO,CAACD,KAAD,CAAP,CAAea,KAAf,CAAqBZ,OAArB,EAA8B,GAAGa,MAAH,CAAUR,IAAV,EAAgB,CAACV,MAAD,CAAhB,CAA9B;AACD,SAFD;AAGD,OAJD,MAIO;AACLU,QAAAA,IAAI,CAACS,IAAL,CAAUN,OAAV;AACAR,QAAAA,OAAO,CAACD,KAAD,CAAP,CAAea,KAAf,CAAqBZ,OAArB,EAA8BK,IAA9B;AACD;AACF,KAfD;AAgBD;AACF,CAnBD;;AAqBA,KAAK,IAAIN,KAAT,IAAkBC,OAAlB,EAA2B;AACzBF,EAAAA,KAAK,CAACC,KAAD,CAAL;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.actionTransformer = actionTransformer;\nexports.logger = void 0;\n\nvar _batch = _interopRequireDefault(require(\"../batch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar batchType = _batch[\"default\"].getType();\n\nfunction actionTransformer(action) {\n  if (action && action.type === batchType) {\n    action.payload.type = batchType;\n    return action.payload;\n  }\n\n  return action;\n}\n\nvar logger = {};\nexports.logger = logger;\n\nvar _loop = function _loop(level) {\n  if (typeof console[level] === 'function') {\n    logger[level] = function levelFn() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var lastArg = args.pop();\n\n      if (Array.isArray(lastArg) && lastArg.type === batchType) {\n        lastArg.forEach(function (action) {\n          console[level].apply(console, [].concat(args, [action]));\n        });\n      } else {\n        args.push(lastArg);\n        console[level].apply(console, args);\n      }\n    };\n  }\n};\n\nfor (var level in console) {\n  _loop(level);\n}"]},"metadata":{},"sourceType":"script"}