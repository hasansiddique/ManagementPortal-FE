{"ast":null,"code":"import { each, isEmpty, isArray, isObject, isString, camelCase, snakeCase } from 'lodash';\n\nconst transform = (body, transformFn) => {\n  const transformObj = obj => {\n    each(obj, (value, key) => {\n      delete obj[key];\n      obj[transformFn(key)] = value;\n\n      if (!isString(value)) {\n        transformObj(value);\n      }\n    });\n  };\n\n  if (isArray(body)) {\n    each(body, obj => {\n      if (isObject(obj)) {\n        transformObj(obj);\n      }\n    });\n  } else if (isObject(body)) {\n    transformObj(body);\n  }\n\n  return body;\n};\n\nconst transformKeys = {\n  toCamelCase: body => {\n    return isEmpty(body) ? body : transform(body, camelCase);\n  },\n  toSnakeCase: body => {\n    return isEmpty(body) ? body : transform(body, snakeCase);\n  }\n};\nexport default transformKeys;","map":{"version":3,"sources":["/home/honey/Desktop/Frontend/ManagementPortal-FE/src/common/transformKeys/index.js"],"names":["each","isEmpty","isArray","isObject","isString","camelCase","snakeCase","transform","body","transformFn","transformObj","obj","value","key","transformKeys","toCamelCase","toSnakeCase"],"mappings":"AAAA,SACEA,IADF,EAEEC,OAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,SAPF,QAQO,QARP;;AAUA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AACvC,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5BX,IAAAA,IAAI,CAACW,GAAD,EAAM,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACxB,aAAOF,GAAG,CAACE,GAAD,CAAV;AACAF,MAAAA,GAAG,CAACF,WAAW,CAACI,GAAD,CAAZ,CAAH,GAAwBD,KAAxB;;AACA,UAAI,CAACR,QAAQ,CAACQ,KAAD,CAAb,EAAsB;AACpBF,QAAAA,YAAY,CAACE,KAAD,CAAZ;AACD;AACF,KANG,CAAJ;AAOD,GARD;;AAUA,MAAIV,OAAO,CAACM,IAAD,CAAX,EAAmB;AACjBR,IAAAA,IAAI,CAACQ,IAAD,EAAQG,GAAD,IAAS;AAClB,UAAIR,QAAQ,CAACQ,GAAD,CAAZ,EAAmB;AACjBD,QAAAA,YAAY,CAACC,GAAD,CAAZ;AACD;AACF,KAJG,CAAJ;AAKD,GAND,MAMO,IAAIR,QAAQ,CAACK,IAAD,CAAZ,EAAoB;AACzBE,IAAAA,YAAY,CAACF,IAAD,CAAZ;AACD;;AAED,SAAOA,IAAP;AACD,CAtBD;;AAwBA,MAAMM,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAGP,IAAD,IAAU;AACrB,WAAOP,OAAO,CAACO,IAAD,CAAP,GAAgBA,IAAhB,GAAuBD,SAAS,CAACC,IAAD,EAAOH,SAAP,CAAvC;AACD,GAHmB;AAIpBW,EAAAA,WAAW,EAAGR,IAAD,IAAU;AACrB,WAAOP,OAAO,CAACO,IAAD,CAAP,GAAgBA,IAAhB,GAAuBD,SAAS,CAACC,IAAD,EAAOF,SAAP,CAAvC;AACD;AANmB,CAAtB;AASA,eAAeQ,aAAf","sourcesContent":["import {\n  each,\n  isEmpty,\n  isArray,\n  isObject,\n  isString,\n  camelCase,\n  snakeCase,\n} from 'lodash';\n\nconst transform = (body, transformFn) => {\n  const transformObj = (obj) => {\n    each(obj, (value, key) => {\n      delete obj[key];\n      obj[transformFn(key)] = value;\n      if (!isString(value)) {\n        transformObj(value);\n      }\n    });\n  };\n\n  if (isArray(body)) {\n    each(body, (obj) => {\n      if (isObject(obj)) {\n        transformObj(obj);\n      }\n    });\n  } else if (isObject(body)) {\n    transformObj(body);\n  }\n\n  return body;\n};\n\nconst transformKeys = {\n  toCamelCase: (body) => {\n    return isEmpty(body) ? body : transform(body, camelCase);\n  },\n  toSnakeCase: (body) => {\n    return isEmpty(body) ? body : transform(body, snakeCase);\n  },\n};\n\nexport default transformKeys;\n"]},"metadata":{},"sourceType":"module"}